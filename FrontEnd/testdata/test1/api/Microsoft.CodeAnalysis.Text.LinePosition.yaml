id: Microsoft.CodeAnalysis.Text.LinePosition
yaml: api\Microsoft.CodeAnalysis.Text.LinePosition.yaml
href: api\Microsoft.CodeAnalysis.Text.LinePosition
name:
  CSharp: LinePosition
qualifiedName:
  CSharp: LinePosition
type: Struct
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:\Repo\RoslynGit\
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src\Compilers\Core\Portable\Text\LinePosition.cs
  startLine: 10
summary: Immutable representation of a line number and position within a SourceText instance.
syntax:
  content:
    CSharp: public struct LinePosition
inheritance:
- id: System.Object
  href: System.Runtime
  isExternal: true
- id: System.ValueType
  href: System.Runtime
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.Text.LinePosition.Zero
  yaml: api\Microsoft.CodeAnalysis.Text.LinePosition.yaml
  href: api\Microsoft.CodeAnalysis.Text.LinePosition
  name:
    CSharp: Zero
  qualifiedName:
    CSharp: Zero
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Text\LinePosition.cs
    startLine: 15
  summary: A [Microsoft.CodeAnalysis.Text.LinePosition](api\Microsoft.CodeAnalysis.Text.LinePosition) that represents position 0 at line 0.
- id: Microsoft.CodeAnalysis.Text.LinePosition.#ctor(System.Int32,System.Int32)
  yaml: api\Microsoft.CodeAnalysis.Text.LinePosition.yaml
  href: api\Microsoft.CodeAnalysis.Text.LinePosition
  name:
    CSharp: .ctor
  qualifiedName:
    CSharp: .ctor
  type: Constructor
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Text\LinePosition.cs
    startLine: 30
  summary: Initializes a new instance of a [Microsoft.CodeAnalysis.Text.LinePosition](api\Microsoft.CodeAnalysis.Text.LinePosition) with the given line and character.
  syntax:
    content:
      CSharp: public LinePosition(int line, int character)
    parameters:
    - id: line
      type:
        id: System.Int32
        href: System.Runtime
        isExternal: true
      description: The line of the line position. The first line in a file is defined as line 0 (zero based line numbering).
    - id: character
      type:
        id: System.Int32
        href: System.Runtime
        isExternal: true
      description: The character position in the line.
- id: Microsoft.CodeAnalysis.Text.LinePosition.Line
  yaml: api\Microsoft.CodeAnalysis.Text.LinePosition.yaml
  href: api\Microsoft.CodeAnalysis.Text.LinePosition
  name:
    CSharp: Line
  qualifiedName:
    CSharp: Line
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Text\LinePosition.cs
    startLine: 64
  summary: The line number. The first line in a file is defined as line 0 (zero based line numbering).
  syntax:
    content:
      CSharp: public int Line
    parameters:
    - id: Line
      type:
        id: System.Int32
        href: System.Runtime
        isExternal: true
- id: Microsoft.CodeAnalysis.Text.LinePosition.get_Line
  yaml: api\Microsoft.CodeAnalysis.Text.LinePosition.yaml
  href: api\Microsoft.CodeAnalysis.Text.LinePosition
  name:
    CSharp: get_Line
  qualifiedName:
    CSharp: get_Line
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Text\LinePosition.cs
    startLine: 66
- id: Microsoft.CodeAnalysis.Text.LinePosition.Character
  yaml: api\Microsoft.CodeAnalysis.Text.LinePosition.yaml
  href: api\Microsoft.CodeAnalysis.Text.LinePosition
  name:
    CSharp: Character
  qualifiedName:
    CSharp: Character
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Text\LinePosition.cs
    startLine: 72
  summary: The character position within the line.
  syntax:
    content:
      CSharp: public int Character
    parameters:
    - id: Character
      type:
        id: System.Int32
        href: System.Runtime
        isExternal: true
- id: Microsoft.CodeAnalysis.Text.LinePosition.get_Character
  yaml: api\Microsoft.CodeAnalysis.Text.LinePosition.yaml
  href: api\Microsoft.CodeAnalysis.Text.LinePosition
  name:
    CSharp: get_Character
  qualifiedName:
    CSharp: get_Character
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Text\LinePosition.cs
    startLine: 74
- id: Microsoft.CodeAnalysis.Text.LinePosition.op_Equality(Microsoft.CodeAnalysis.Text.LinePosition,Microsoft.CodeAnalysis.Text.LinePosition)
  yaml: api\Microsoft.CodeAnalysis.Text.LinePosition.yaml
  href: api\Microsoft.CodeAnalysis.Text.LinePosition
  name:
    CSharp: op_Equality
  qualifiedName:
    CSharp: op_Equality
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Text\LinePosition.cs
    startLine: 80
  summary: Determines whether two [Microsoft.CodeAnalysis.Text.LinePosition](api\Microsoft.CodeAnalysis.Text.LinePosition) are the same.
- id: Microsoft.CodeAnalysis.Text.LinePosition.op_Inequality(Microsoft.CodeAnalysis.Text.LinePosition,Microsoft.CodeAnalysis.Text.LinePosition)
  yaml: api\Microsoft.CodeAnalysis.Text.LinePosition.yaml
  href: api\Microsoft.CodeAnalysis.Text.LinePosition
  name:
    CSharp: op_Inequality
  qualifiedName:
    CSharp: op_Inequality
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Text\LinePosition.cs
    startLine: 88
  summary: Determines whether two [Microsoft.CodeAnalysis.Text.LinePosition](api\Microsoft.CodeAnalysis.Text.LinePosition) are different.
- id: Microsoft.CodeAnalysis.Text.LinePosition.Equals(Microsoft.CodeAnalysis.Text.LinePosition)
  yaml: api\Microsoft.CodeAnalysis.Text.LinePosition.yaml
  href: api\Microsoft.CodeAnalysis.Text.LinePosition
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Equals
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Text\LinePosition.cs
    startLine: 97
  summary: Determines whether two [Microsoft.CodeAnalysis.Text.LinePosition](api\Microsoft.CodeAnalysis.Text.LinePosition) are the same.
  syntax:
    content:
      CSharp: public bool Equals(LinePosition other)
    parameters:
    - id: other
      type:
        id: LinePosition
        href: D:\Repo\RoslynGit\src\Compilers\Core\Portable\Text\LinePosition.cs
      description: The object to compare.
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.Text.LinePosition.Equals(System.Object)
  yaml: api\Microsoft.CodeAnalysis.Text.LinePosition.yaml
  href: api\Microsoft.CodeAnalysis.Text.LinePosition
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Equals
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Text\LinePosition.cs
    startLine: 106
  summary: Determines whether two [Microsoft.CodeAnalysis.Text.LinePosition](api\Microsoft.CodeAnalysis.Text.LinePosition) are the same.
  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        href: System.Runtime
        isExternal: true
      description: The object to compare.
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.Text.LinePosition.GetHashCode
  yaml: api\Microsoft.CodeAnalysis.Text.LinePosition.yaml
  href: api\Microsoft.CodeAnalysis.Text.LinePosition
  name:
    CSharp: GetHashCode
  qualifiedName:
    CSharp: GetHashCode
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Text\LinePosition.cs
    startLine: 114
  summary: Provides a hash function for [Microsoft.CodeAnalysis.Text.LinePosition](api\Microsoft.CodeAnalysis.Text.LinePosition).
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
- id: Microsoft.CodeAnalysis.Text.LinePosition.ToString
  yaml: api\Microsoft.CodeAnalysis.Text.LinePosition.yaml
  href: api\Microsoft.CodeAnalysis.Text.LinePosition
  name:
    CSharp: ToString
  qualifiedName:
    CSharp: ToString
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Text\LinePosition.cs
    startLine: 123
  summary: Provides a string representation for [Microsoft.CodeAnalysis.Text.LinePosition](api\Microsoft.CodeAnalysis.Text.LinePosition).
  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
- id: Microsoft.CodeAnalysis.Text.LinePosition.CompareTo(Microsoft.CodeAnalysis.Text.LinePosition)
  yaml: api\Microsoft.CodeAnalysis.Text.LinePosition.yaml
  href: api\Microsoft.CodeAnalysis.Text.LinePosition
  name:
    CSharp: CompareTo
  qualifiedName:
    CSharp: CompareTo
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Text\LinePosition.cs
    startLine: 128
  syntax:
    content:
      CSharp: public int CompareTo(LinePosition other)
    parameters:
    - id: other
      type:
        id: LinePosition
        href: D:\Repo\RoslynGit\src\Compilers\Core\Portable\Text\LinePosition.cs
    return:
      id: Int32
- id: Microsoft.CodeAnalysis.Text.LinePosition.op_GreaterThan(Microsoft.CodeAnalysis.Text.LinePosition,Microsoft.CodeAnalysis.Text.LinePosition)
  yaml: api\Microsoft.CodeAnalysis.Text.LinePosition.yaml
  href: api\Microsoft.CodeAnalysis.Text.LinePosition
  name:
    CSharp: op_GreaterThan
  qualifiedName:
    CSharp: op_GreaterThan
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Text\LinePosition.cs
    startLine: 134
- id: Microsoft.CodeAnalysis.Text.LinePosition.op_GreaterThanOrEqual(Microsoft.CodeAnalysis.Text.LinePosition,Microsoft.CodeAnalysis.Text.LinePosition)
  yaml: api\Microsoft.CodeAnalysis.Text.LinePosition.yaml
  href: api\Microsoft.CodeAnalysis.Text.LinePosition
  name:
    CSharp: op_GreaterThanOrEqual
  qualifiedName:
    CSharp: op_GreaterThanOrEqual
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Text\LinePosition.cs
    startLine: 139
- id: Microsoft.CodeAnalysis.Text.LinePosition.op_LessThan(Microsoft.CodeAnalysis.Text.LinePosition,Microsoft.CodeAnalysis.Text.LinePosition)
  yaml: api\Microsoft.CodeAnalysis.Text.LinePosition.yaml
  href: api\Microsoft.CodeAnalysis.Text.LinePosition
  name:
    CSharp: op_LessThan
  qualifiedName:
    CSharp: op_LessThan
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Text\LinePosition.cs
    startLine: 144
- id: Microsoft.CodeAnalysis.Text.LinePosition.op_LessThanOrEqual(Microsoft.CodeAnalysis.Text.LinePosition,Microsoft.CodeAnalysis.Text.LinePosition)
  yaml: api\Microsoft.CodeAnalysis.Text.LinePosition.yaml
  href: api\Microsoft.CodeAnalysis.Text.LinePosition
  name:
    CSharp: op_LessThanOrEqual
  qualifiedName:
    CSharp: op_LessThanOrEqual
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Text\LinePosition.cs
    startLine: 149
