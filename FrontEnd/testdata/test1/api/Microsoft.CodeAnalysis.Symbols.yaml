id: Microsoft.CodeAnalysis.Symbols
yaml: api\Microsoft.CodeAnalysis.Symbols.yaml
href: api\Microsoft.CodeAnalysis.Symbols
name:
  CSharp: Symbols
qualifiedName:
  CSharp: Symbols
type: Namespace
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:\Repo\RoslynGit\
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src\Compilers\Core\Portable\Symbols\AnonymousTypes\CommonAnonymousTypeManager.cs
  startLine: 2
items:
- id: Microsoft.CodeAnalysis.AttributeData
  yaml: api\Microsoft.CodeAnalysis.AttributeData.yaml
  href: api\Microsoft.CodeAnalysis.AttributeData
  type: Class
- id: Microsoft.CodeAnalysis.CustomModifier
  yaml: api\Microsoft.CodeAnalysis.CustomModifier.yaml
  href: api\Microsoft.CodeAnalysis.CustomModifier
  type: Class
- id: Microsoft.CodeAnalysis.IAliasSymbol
  yaml: api\Microsoft.CodeAnalysis.IAliasSymbol.yaml
  href: api\Microsoft.CodeAnalysis.IAliasSymbol
  type: Interface
  summary: >+
    Represents a using alias (Imports alias in Visual Basic).

- id: Microsoft.CodeAnalysis.IArrayTypeSymbol
  yaml: api\Microsoft.CodeAnalysis.IArrayTypeSymbol.yaml
  href: api\Microsoft.CodeAnalysis.IArrayTypeSymbol
  type: Interface
  summary: >+
    Represents an array.

- id: Microsoft.CodeAnalysis.IAssemblySymbol
  yaml: api\Microsoft.CodeAnalysis.IAssemblySymbol.yaml
  href: api\Microsoft.CodeAnalysis.IAssemblySymbol
  type: Interface
  summary: >+
    Represents a .NET assembly, consisting of one or more modules.

- id: Microsoft.CodeAnalysis.IDynamicTypeSymbol
  yaml: api\Microsoft.CodeAnalysis.IDynamicTypeSymbol.yaml
  href: api\Microsoft.CodeAnalysis.IDynamicTypeSymbol
  type: Interface
  summary: >+
    Represents the 'dynamic' type in C#.

- id: Microsoft.CodeAnalysis.IErrorTypeSymbol
  yaml: api\Microsoft.CodeAnalysis.IErrorTypeSymbol.yaml
  href: api\Microsoft.CodeAnalysis.IErrorTypeSymbol
  type: Interface
  summary: >+
    An IErrorTypeSymbol is used when the compiler cannot determine a symbol object to return because

    of an error. For example, if a field is declared "Foo x;", and the type "Foo" cannot be

    found, an IErrorTypeSymbol is returned when asking the field "x" what it's type is.

- id: Microsoft.CodeAnalysis.IEventSymbol
  yaml: api\Microsoft.CodeAnalysis.IEventSymbol.yaml
  href: api\Microsoft.CodeAnalysis.IEventSymbol
  type: Interface
  summary: >+
    Represents an event.

- id: Microsoft.CodeAnalysis.IFieldSymbol
  yaml: api\Microsoft.CodeAnalysis.IFieldSymbol.yaml
  href: api\Microsoft.CodeAnalysis.IFieldSymbol
  type: Interface
  summary: >+
    Represents a field in a class, struct or enum.

- id: Microsoft.CodeAnalysis.ILabelSymbol
  yaml: api\Microsoft.CodeAnalysis.ILabelSymbol.yaml
  href: api\Microsoft.CodeAnalysis.ILabelSymbol
  type: Interface
  summary: >+
    Represents a label in method body

- id: Microsoft.CodeAnalysis.ILocalSymbol
  yaml: api\Microsoft.CodeAnalysis.ILocalSymbol.yaml
  href: api\Microsoft.CodeAnalysis.ILocalSymbol
  type: Interface
  summary: >+
    Represents a local variable in method body.

- id: Microsoft.CodeAnalysis.IMethodSymbol
  yaml: api\Microsoft.CodeAnalysis.IMethodSymbol.yaml
  href: api\Microsoft.CodeAnalysis.IMethodSymbol
  type: Interface
  summary: >+
    Represents a method or method-like symbol (including constructor,

    destructor, operator, or property/event accessor).

- id: Microsoft.CodeAnalysis.IModuleSymbol
  yaml: api\Microsoft.CodeAnalysis.IModuleSymbol.yaml
  href: api\Microsoft.CodeAnalysis.IModuleSymbol
  type: Interface
  summary: >+
    Represents a module within an assembly. Every assembly contains one or more modules.

- id: Microsoft.CodeAnalysis.INamedTypeSymbol
  yaml: api\Microsoft.CodeAnalysis.INamedTypeSymbol.yaml
  href: api\Microsoft.CodeAnalysis.INamedTypeSymbol
  type: Interface
  summary: >+
    Represents a type other than an array, a pointer, a type parameter.

- id: Microsoft.CodeAnalysis.INamespaceOrTypeSymbol
  yaml: api\Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.yaml
  href: api\Microsoft.CodeAnalysis.INamespaceOrTypeSymbol
  type: Interface
  summary: >+
    Represents either a namespace or a type.

- id: Microsoft.CodeAnalysis.INamespaceSymbol
  yaml: api\Microsoft.CodeAnalysis.INamespaceSymbol.yaml
  href: api\Microsoft.CodeAnalysis.INamespaceSymbol
  type: Interface
  summary: >+
    Represents a namespace.

- id: Microsoft.CodeAnalysis.IParameterSymbol
  yaml: api\Microsoft.CodeAnalysis.IParameterSymbol.yaml
  href: api\Microsoft.CodeAnalysis.IParameterSymbol
  type: Interface
  summary: >+
    Represents a parameter of a method or property.

- id: Microsoft.CodeAnalysis.IPointerTypeSymbol
  yaml: api\Microsoft.CodeAnalysis.IPointerTypeSymbol.yaml
  href: api\Microsoft.CodeAnalysis.IPointerTypeSymbol
  type: Interface
  summary: >+
    Represents a pointer type such as "int *". Pointer types

    are used only in unsafe code.

- id: Microsoft.CodeAnalysis.IPreprocessingSymbol
  yaml: api\Microsoft.CodeAnalysis.IPreprocessingSymbol.yaml
  href: api\Microsoft.CodeAnalysis.IPreprocessingSymbol
  type: Interface
  summary: >+
    Represents a preprocessing conditional compilation symbol.

- id: Microsoft.CodeAnalysis.IPropertySymbol
  yaml: api\Microsoft.CodeAnalysis.IPropertySymbol.yaml
  href: api\Microsoft.CodeAnalysis.IPropertySymbol
  type: Interface
  summary: >+
    Represents a property or indexer.

- id: Microsoft.CodeAnalysis.IRangeVariableSymbol
  yaml: api\Microsoft.CodeAnalysis.IRangeVariableSymbol.yaml
  href: api\Microsoft.CodeAnalysis.IRangeVariableSymbol
  type: Interface
  summary: >+
    Represents a range variable in a query expression.

- id: Microsoft.CodeAnalysis.ISymbol
  yaml: api\Microsoft.CodeAnalysis.ISymbol.yaml
  href: api\Microsoft.CodeAnalysis.ISymbol
  type: Interface
  summary: >+
    Represents a symbol (namespace, class, method, parameter, etc.)

    exposed by the compiler.

- id: Microsoft.CodeAnalysis.ISymbolExtensions
  yaml: api\Microsoft.CodeAnalysis.ISymbolExtensions.yaml
  href: api\Microsoft.CodeAnalysis.ISymbolExtensions
  type: Class
- id: Microsoft.CodeAnalysis.ITypeParameterSymbol
  yaml: api\Microsoft.CodeAnalysis.ITypeParameterSymbol.yaml
  href: api\Microsoft.CodeAnalysis.ITypeParameterSymbol
  type: Interface
  summary: >+
    Represents a type parameter in a generic type or generic method.

- id: Microsoft.CodeAnalysis.ITypeSymbol
  yaml: api\Microsoft.CodeAnalysis.ITypeSymbol.yaml
  href: api\Microsoft.CodeAnalysis.ITypeSymbol
  type: Interface
- id: Microsoft.CodeAnalysis.LanguageNames
  yaml: api\Microsoft.CodeAnalysis.LanguageNames.yaml
  href: api\Microsoft.CodeAnalysis.LanguageNames
  type: Class
  summary: >+
    A class that provides constants for common language names.

- id: Microsoft.CodeAnalysis.MethodKind
  yaml: api\Microsoft.CodeAnalysis.MethodKind.yaml
  href: api\Microsoft.CodeAnalysis.MethodKind
  type: Enum
  summary: >+
    Enumeration for possible kinds of method symbols.

- id: Microsoft.CodeAnalysis.NamespaceKind
  yaml: api\Microsoft.CodeAnalysis.NamespaceKind.yaml
  href: api\Microsoft.CodeAnalysis.NamespaceKind
  type: Enum
  summary: >+
    Describes the kind of the namespace extent.

- id: Microsoft.CodeAnalysis.DllImportData
  yaml: api\Microsoft.CodeAnalysis.DllImportData.yaml
  href: api\Microsoft.CodeAnalysis.DllImportData
  type: Class
  summary: >+
    Information that describes how a method from the underlying Platform is to be invoked.

- id: Microsoft.CodeAnalysis.RefKind
  yaml: api\Microsoft.CodeAnalysis.RefKind.yaml
  href: api\Microsoft.CodeAnalysis.RefKind
  type: Enum
  summary: >+
    Denotes the kind of reference parameter.

- id: Microsoft.CodeAnalysis.SymbolKind
  yaml: api\Microsoft.CodeAnalysis.SymbolKind.yaml
  href: api\Microsoft.CodeAnalysis.SymbolKind
  type: Enum
  summary: >+
    Specifies the possible kinds of symbols.

- id: Microsoft.CodeAnalysis.SymbolVisitor
  yaml: api\Microsoft.CodeAnalysis.SymbolVisitor.yaml
  href: api\Microsoft.CodeAnalysis.SymbolVisitor
  type: Class
- id: Microsoft.CodeAnalysis.SymbolVisitor`1
  yaml: api\Microsoft.CodeAnalysis.SymbolVisitor`1.yaml
  href: api\Microsoft.CodeAnalysis.SymbolVisitor`1
  type: Class
- id: Microsoft.CodeAnalysis.TypedConstant
  yaml: api\Microsoft.CodeAnalysis.TypedConstant.yaml
  href: api\Microsoft.CodeAnalysis.TypedConstant
  type: Struct
  summary: >+
    Represents a constant value used as an argument to a custom attribute.

- id: Microsoft.CodeAnalysis.TypedConstantKind
  yaml: api\Microsoft.CodeAnalysis.TypedConstantKind.yaml
  href: api\Microsoft.CodeAnalysis.TypedConstantKind
  type: Enum
  summary: >+
    Represents the kind of a TypedConstant.

- id: Microsoft.CodeAnalysis.TypeKind
  yaml: api\Microsoft.CodeAnalysis.TypeKind.yaml
  href: api\Microsoft.CodeAnalysis.TypeKind
  type: Enum
  summary: >+
    Enumeration for possible kinds of type symbols.

- id: Microsoft.CodeAnalysis.TypeParameterKind
  yaml: api\Microsoft.CodeAnalysis.TypeParameterKind.yaml
  href: api\Microsoft.CodeAnalysis.TypeParameterKind
  type: Enum
  summary: >+
    Represents the different kinds of type parameters.

- id: Microsoft.CodeAnalysis.VarianceKind
  yaml: api\Microsoft.CodeAnalysis.VarianceKind.yaml
  href: api\Microsoft.CodeAnalysis.VarianceKind
  type: Enum
  summary: >+
    An enumeration declaring the kinds of variance supported for generic type parameters.

- id: Microsoft.CodeAnalysis.WellKnownMemberNames
  yaml: api\Microsoft.CodeAnalysis.WellKnownMemberNames.yaml
  href: api\Microsoft.CodeAnalysis.WellKnownMemberNames
  type: Class
  summary: >+
    Specifies the member names known to the compiler (such as .ctor or op_Explicit).

