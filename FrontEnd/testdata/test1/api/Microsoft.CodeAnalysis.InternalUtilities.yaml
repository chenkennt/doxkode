id: Microsoft.CodeAnalysis.InternalUtilities
yaml: api\Microsoft.CodeAnalysis.InternalUtilities.yaml
href: api\Microsoft.CodeAnalysis.InternalUtilities
name:
  CSharp: InternalUtilities
qualifiedName:
  CSharp: InternalUtilities
type: Namespace
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:\Repo\RoslynGit\
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src\Compilers\Core\Portable\InternalUtilities\AssemblyLocationLightUp.cs
  startLine: 5
items:
- id: Microsoft.CodeAnalysis.CandidateReason
  yaml: api\Microsoft.CodeAnalysis.CandidateReason.yaml
  href: api\Microsoft.CodeAnalysis.CandidateReason
  type: Enum
  summary: >+
    Indicates the reasons why a candidate (or set of candidate) symbols were not considered

    correct in SemanticInfo. Higher values take precedence over lower values, so if, for

    example, there a symbol with a given name that was inaccessible, and other with the wrong

    arity, only the inaccessible one would be reported in the SemanticInfo.

- id: Microsoft.CodeAnalysis.Compilation
  yaml: api\Microsoft.CodeAnalysis.Compilation.yaml
  href: api\Microsoft.CodeAnalysis.Compilation
  type: Class
  summary: >+
    The compilation object is an immutable representation of a single invocation of the

    compiler. Although immutable, a compilation is also on-demand, and will realize and cache

    data as necessary. A compilation can produce a new compilation from existing compilation

    with the application of small deltas. In many cases, it is more efficient than creating a

    new compilation from scratch, as the new compilation can reuse information from the old

    compilation.

- id: Microsoft.CodeAnalysis.CompilationOptions
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  type: Class
  summary: >+
    Represents compilation options common to C# and VB.

- id: Microsoft.CodeAnalysis.ControlFlowAnalysis
  yaml: api\Microsoft.CodeAnalysis.ControlFlowAnalysis.yaml
  href: api\Microsoft.CodeAnalysis.ControlFlowAnalysis
  type: Class
  summary: >+
    Provides information about statements which transfer control in and out of a region. This

    information is returned from a call to [Microsoft.CodeAnalysis.SemanticModel.AnalyzeControlFlow(Microsoft.CodeAnalysis.SyntaxNode)](#).

- id: Microsoft.CodeAnalysis.DataFlowAnalysis
  yaml: api\Microsoft.CodeAnalysis.DataFlowAnalysis.yaml
  href: api\Microsoft.CodeAnalysis.DataFlowAnalysis
  type: Class
  summary: >+
    Provides information about how data flows into and out of a region. This information is

    returned from a call to

    [Microsoft.CodeAnalysis.SemanticModel.AnalyzeDataFlow(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)](#), or one of its language-specific overloads,

    where you pass the first and last statements of the region as parameters.

    "Inside" means those statements or ones between them. "Outside" are any other statements of the same method.

- id: Microsoft.CodeAnalysis.ModelExtensions
  yaml: api\Microsoft.CodeAnalysis.ModelExtensions.yaml
  href: api\Microsoft.CodeAnalysis.ModelExtensions
  type: Class
- id: Microsoft.CodeAnalysis.OptimizationLevel
  yaml: api\Microsoft.CodeAnalysis.OptimizationLevel.yaml
  href: api\Microsoft.CodeAnalysis.OptimizationLevel
  type: Enum
  summary: >+
    Determines the level of optimization of the generated code.

- id: Microsoft.CodeAnalysis.ParseOptions
  yaml: api\Microsoft.CodeAnalysis.ParseOptions.yaml
  href: api\Microsoft.CodeAnalysis.ParseOptions
  type: Class
  summary: >+
    Represents parse options common to C# and VB.

- id: Microsoft.CodeAnalysis.Platform
  yaml: api\Microsoft.CodeAnalysis.Platform.yaml
  href: api\Microsoft.CodeAnalysis.Platform
  type: Enum
- id: Microsoft.CodeAnalysis.PreprocessingSymbolInfo
  yaml: api\Microsoft.CodeAnalysis.PreprocessingSymbolInfo.yaml
  href: api\Microsoft.CodeAnalysis.PreprocessingSymbolInfo
  type: Struct
- id: Microsoft.CodeAnalysis.SemanticModel
  yaml: api\Microsoft.CodeAnalysis.SemanticModel.yaml
  href: api\Microsoft.CodeAnalysis.SemanticModel
  type: Class
  summary: >+
    Allows asking semantic questions about a tree of syntax nodes in a Compilation. Typically,

    an instance is obtained by a call to GetBinding on a Compilation or Compilation.

- id: Microsoft.CodeAnalysis.SourceReferenceResolver
  yaml: api\Microsoft.CodeAnalysis.SourceReferenceResolver.yaml
  href: api\Microsoft.CodeAnalysis.SourceReferenceResolver
  type: Class
  summary: >+
    Resolves references to source documents specified in the source.

- id: Microsoft.CodeAnalysis.SpeculativeBindingOption
  yaml: api\Microsoft.CodeAnalysis.SpeculativeBindingOption.yaml
  href: api\Microsoft.CodeAnalysis.SpeculativeBindingOption
  type: Enum
  summary: >+
    Describes the kind of binding to be performed in one of the SemanticModel

    speculative binding methods.

- id: Microsoft.CodeAnalysis.SubsystemVersion
  yaml: api\Microsoft.CodeAnalysis.SubsystemVersion.yaml
  href: api\Microsoft.CodeAnalysis.SubsystemVersion
  type: Struct
  summary: >+
    Represents subsystem version, see /subsystemversion command line

    option for details and valid values.



    The following table lists common subsystem versions of Windows.



    Windows version             Subsystem version

    - Windows 2000                5.00

    - Windows XP                  5.01

    - Windows Vista               6.00

    - Windows 7                   6.01

    - Windows 8 Release Preview   6.02

- id: Microsoft.CodeAnalysis.SymbolInfo
  yaml: api\Microsoft.CodeAnalysis.SymbolInfo.yaml
  href: api\Microsoft.CodeAnalysis.SymbolInfo
  type: Struct
- id: Microsoft.CodeAnalysis.TypeInfo
  yaml: api\Microsoft.CodeAnalysis.TypeInfo.yaml
  href: api\Microsoft.CodeAnalysis.TypeInfo
  type: Struct
- id: Microsoft.CodeAnalysis.XmlReferenceResolver
  yaml: api\Microsoft.CodeAnalysis.XmlReferenceResolver.yaml
  href: api\Microsoft.CodeAnalysis.XmlReferenceResolver
  type: Class
  summary: >+
    Resolves references to XML documents specified in source code.

- id: Microsoft.CodeAnalysis.AdditionalText
  yaml: api\Microsoft.CodeAnalysis.AdditionalText.yaml
  href: api\Microsoft.CodeAnalysis.AdditionalText
  type: Class
  summary: >+
    Represents a non source code file.

- id: Microsoft.CodeAnalysis.Diagnostic
  yaml: api\Microsoft.CodeAnalysis.Diagnostic.yaml
  href: api\Microsoft.CodeAnalysis.Diagnostic
  type: Class
  summary: >+
    Represents a diagnostic, such as a compiler error or a warning, along with the location where it occurred.

- id: Microsoft.CodeAnalysis.TriggerDiagnosticDescriptor
  yaml: api\Microsoft.CodeAnalysis.TriggerDiagnosticDescriptor.yaml
  href: api\Microsoft.CodeAnalysis.TriggerDiagnosticDescriptor
  type: Class
  summary: >+
    Provides a description about a [Microsoft.CodeAnalysis.Diagnostic](#/api\Microsoft.CodeAnalysis.Diagnostic) that is a trigger for some custom behavior for code analyis clients.

- id: Microsoft.CodeAnalysis.WellKnownDiagnosticTags
  yaml: api\Microsoft.CodeAnalysis.WellKnownDiagnosticTags.yaml
  href: api\Microsoft.CodeAnalysis.WellKnownDiagnosticTags
  type: Class
- id: Microsoft.CodeAnalysis.DiagnosticDescriptor
  yaml: api\Microsoft.CodeAnalysis.DiagnosticDescriptor.yaml
  href: api\Microsoft.CodeAnalysis.DiagnosticDescriptor
  type: Class
  summary: >+
    Provides a description about a [Microsoft.CodeAnalysis.Diagnostic](#/api\Microsoft.CodeAnalysis.Diagnostic)

- id: Microsoft.CodeAnalysis.DiagnosticFormatter
  yaml: api\Microsoft.CodeAnalysis.DiagnosticFormatter.yaml
  href: api\Microsoft.CodeAnalysis.DiagnosticFormatter
  type: Class
  summary: >+
    Formats [Microsoft.CodeAnalysis.Diagnostic](#/api\Microsoft.CodeAnalysis.Diagnostic) messages.

- id: Microsoft.CodeAnalysis.DiagnosticSeverity
  yaml: api\Microsoft.CodeAnalysis.DiagnosticSeverity.yaml
  href: api\Microsoft.CodeAnalysis.DiagnosticSeverity
  type: Enum
  summary: >+
    Describes how severe a diagnostic is.

- id: Microsoft.CodeAnalysis.FileLinePositionSpan
  yaml: api\Microsoft.CodeAnalysis.FileLinePositionSpan.yaml
  href: api\Microsoft.CodeAnalysis.FileLinePositionSpan
  type: Struct
  summary: >+
    Represents a span of text in a source code file in terms of file name, line number, and offset within line.

    However, the file is actually whatever was passed in when asked to parse; there may not really be a file.

- id: Microsoft.CodeAnalysis.Location
  yaml: api\Microsoft.CodeAnalysis.Location.yaml
  href: api\Microsoft.CodeAnalysis.Location
  type: Class
  summary: >+
    A program location in source code.

- id: Microsoft.CodeAnalysis.LocationKind
  yaml: api\Microsoft.CodeAnalysis.LocationKind.yaml
  href: api\Microsoft.CodeAnalysis.LocationKind
  type: Enum
  summary: >+
    Specifies the kind of location (source vs. metadata).

- id: Microsoft.CodeAnalysis.ReportDiagnostic
  yaml: api\Microsoft.CodeAnalysis.ReportDiagnostic.yaml
  href: api\Microsoft.CodeAnalysis.ReportDiagnostic
  type: Enum
  summary: >+
    Describes how to report a warning diagnostic.

- id: Microsoft.CodeAnalysis.DocumentationProvider
  yaml: api\Microsoft.CodeAnalysis.DocumentationProvider.yaml
  href: api\Microsoft.CodeAnalysis.DocumentationProvider
  type: Class
  summary: >+
    A class used to provide XML documentation to the compiler for members from metadata. A

    custom implementation of this class should be returned from a DocumentationResolver to provide XML

    documentation comments from custom caches or locations.

- id: Microsoft.CodeAnalysis.DocumentationMode
  yaml: api\Microsoft.CodeAnalysis.DocumentationMode.yaml
  href: api\Microsoft.CodeAnalysis.DocumentationMode
  type: Enum
  summary: >+
    Specifies the different documentation comment processing modes.

