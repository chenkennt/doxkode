id: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer
yaml: api\Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.yaml
href: api\Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer
name:
  CSharp: DiagnosticAnalyzer
qualifiedName:
  CSharp: DiagnosticAnalyzer
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:\Repo\RoslynGit\
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src\Compilers\Core\Portable\DiagnosticAnalyzer\DiagnosticAnalyzer.cs
  startLine: 9
summary: The base type for diagnostic analyzers.
syntax:
  content:
    CSharp: public abstract class DiagnosticAnalyzer
inheritance:
- id: T:System.Object
  href: System.Runtime
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.SupportedDiagnostics
  yaml: api\Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.yaml
  href: api\Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer
  name:
    CSharp: SupportedDiagnostics
  qualifiedName:
    CSharp: SupportedDiagnostics
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\DiagnosticAnalyzer\DiagnosticAnalyzer.cs
    startLine: 14
  summary: Returns a set of descriptors for the diagnostics that this analyzer is capable of producing.
  syntax:
    content:
      CSharp: public abstract ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics
    parameters:
    - id: SupportedDiagnostics
      type:
        id: T:System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.DiagnosticDescriptor}
        href: System.Collections.Immutable
        isExternal: true
- id: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.get_SupportedDiagnostics
  yaml: api\Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.yaml
  href: api\Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer
  name:
    CSharp: get_SupportedDiagnostics
  qualifiedName:
    CSharp: get_SupportedDiagnostics
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\DiagnosticAnalyzer\DiagnosticAnalyzer.cs
    startLine: 14
- id: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.Initialize(Microsoft.CodeAnalysis.Diagnostics.AnalysisContext)
  yaml: api\Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.yaml
  href: api\Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer
  name:
    CSharp: Initialize
  qualifiedName:
    CSharp: Initialize
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\DiagnosticAnalyzer\DiagnosticAnalyzer.cs
    startLine: 20
  summary: Called once at session start to register actions in the analysis context.
  syntax:
    content:
      CSharp: public abstract void Initialize(AnalysisContext context);
    parameters:
    - id: context
      type:
        id: AnalysisContext
        href: D:\Repo\RoslynGit\src\Compilers\Core\Portable\DiagnosticAnalyzer\DiagnosticAnalysisContext.cs
    return:
      id: Void
