id: Microsoft.CodeAnalysis.SyntaxAnnotation
yaml: api\Microsoft.CodeAnalysis.SyntaxAnnotation.yaml
href: api\Microsoft.CodeAnalysis.SyntaxAnnotation
name:
  CSharp: SyntaxAnnotation
qualifiedName:
  CSharp: SyntaxAnnotation
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:\Repo\RoslynGit\
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src\Compilers\Core\Portable\Syntax\SyntaxAnnotation.cs
  startLine: 14
summary: "A SynatxAnnotation is used to annotate syntax elements with additional information. \r\n    \r\n    Since syntax elements are immutable, annotating them requires creating new instances of them\r\n    with the annotations attached."
syntax:
  content:
    CSharp: public sealed class SyntaxAnnotation
inheritance:
- id: System.Object
  href: System.Runtime
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.SyntaxAnnotation.ElasticAnnotation
  yaml: api\Microsoft.CodeAnalysis.SyntaxAnnotation.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxAnnotation
  name:
    CSharp: ElasticAnnotation
  qualifiedName:
    CSharp: ElasticAnnotation
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Syntax\SyntaxAnnotation.cs
    startLine: 20
  summary: A predefined syntax annotation that indicates whether the syntax element has elastic trivia.
- id: Microsoft.CodeAnalysis.SyntaxAnnotation.Kind
  yaml: api\Microsoft.CodeAnalysis.SyntaxAnnotation.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxAnnotation
  name:
    CSharp: Kind
  qualifiedName:
    CSharp: Kind
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Syntax\SyntaxAnnotation.cs
    startLine: 27
  syntax:
    content:
      CSharp: public string Kind
    parameters:
    - id: Kind
      type:
        id: System.String
        href: System.Runtime
        isExternal: true
- id: Microsoft.CodeAnalysis.SyntaxAnnotation.get_Kind
  yaml: api\Microsoft.CodeAnalysis.SyntaxAnnotation.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxAnnotation
  name:
    CSharp: get_Kind
  qualifiedName:
    CSharp: get_Kind
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Syntax\SyntaxAnnotation.cs
    startLine: 27
- id: Microsoft.CodeAnalysis.SyntaxAnnotation.Data
  yaml: api\Microsoft.CodeAnalysis.SyntaxAnnotation.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxAnnotation
  name:
    CSharp: Data
  qualifiedName:
    CSharp: Data
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Syntax\SyntaxAnnotation.cs
    startLine: 28
  syntax:
    content:
      CSharp: public string Data
    parameters:
    - id: Data
      type:
        id: System.String
        href: System.Runtime
        isExternal: true
- id: Microsoft.CodeAnalysis.SyntaxAnnotation.get_Data
  yaml: api\Microsoft.CodeAnalysis.SyntaxAnnotation.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxAnnotation
  name:
    CSharp: get_Data
  qualifiedName:
    CSharp: get_Data
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Syntax\SyntaxAnnotation.cs
    startLine: 28
- id: Microsoft.CodeAnalysis.SyntaxAnnotation.#ctor
  yaml: api\Microsoft.CodeAnalysis.SyntaxAnnotation.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxAnnotation
  name:
    CSharp: .ctor
  qualifiedName:
    CSharp: .ctor
  type: Constructor
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Syntax\SyntaxAnnotation.cs
    startLine: 30
  syntax:
    content:
      CSharp: public SyntaxAnnotation()
    parameters: []
- id: Microsoft.CodeAnalysis.SyntaxAnnotation.#ctor(System.String)
  yaml: api\Microsoft.CodeAnalysis.SyntaxAnnotation.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxAnnotation
  name:
    CSharp: .ctor
  qualifiedName:
    CSharp: .ctor
  type: Constructor
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Syntax\SyntaxAnnotation.cs
    startLine: 35
  syntax:
    content:
      CSharp: 'public SyntaxAnnotation(string kind): this ()'
    parameters:
    - id: kind
      type:
        id: System.String
        href: System.Runtime
        isExternal: true
- id: Microsoft.CodeAnalysis.SyntaxAnnotation.#ctor(System.String,System.String)
  yaml: api\Microsoft.CodeAnalysis.SyntaxAnnotation.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxAnnotation
  name:
    CSharp: .ctor
  qualifiedName:
    CSharp: .ctor
  type: Constructor
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Syntax\SyntaxAnnotation.cs
    startLine: 41
  syntax:
    content:
      CSharp: 'public SyntaxAnnotation(string kind, string data): this (kind)'
    parameters:
    - id: kind
      type:
        id: System.String
        href: System.Runtime
        isExternal: true
    - id: data
      type:
        id: System.String
        href: System.Runtime
        isExternal: true
- id: Microsoft.CodeAnalysis.SyntaxAnnotation.Equals(Microsoft.CodeAnalysis.SyntaxAnnotation)
  yaml: api\Microsoft.CodeAnalysis.SyntaxAnnotation.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxAnnotation
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Equals
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Syntax\SyntaxAnnotation.cs
    startLine: 71
  syntax:
    content:
      CSharp: public bool Equals(SyntaxAnnotation other)
    parameters:
    - id: other
      type:
        id: SyntaxAnnotation
        href: D:\Repo\RoslynGit\src\Compilers\Core\Portable\Syntax\SyntaxAnnotation.cs
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.SyntaxAnnotation.op_Equality(Microsoft.CodeAnalysis.SyntaxAnnotation,Microsoft.CodeAnalysis.SyntaxAnnotation)
  yaml: api\Microsoft.CodeAnalysis.SyntaxAnnotation.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxAnnotation
  name:
    CSharp: op_Equality
  qualifiedName:
    CSharp: op_Equality
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Syntax\SyntaxAnnotation.cs
    startLine: 76
- id: Microsoft.CodeAnalysis.SyntaxAnnotation.op_Inequality(Microsoft.CodeAnalysis.SyntaxAnnotation,Microsoft.CodeAnalysis.SyntaxAnnotation)
  yaml: api\Microsoft.CodeAnalysis.SyntaxAnnotation.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxAnnotation
  name:
    CSharp: op_Inequality
  qualifiedName:
    CSharp: op_Inequality
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Syntax\SyntaxAnnotation.cs
    startLine: 91
- id: Microsoft.CodeAnalysis.SyntaxAnnotation.Equals(System.Object)
  yaml: api\Microsoft.CodeAnalysis.SyntaxAnnotation.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxAnnotation
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Equals
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Syntax\SyntaxAnnotation.cs
    startLine: 106
  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        href: System.Runtime
        isExternal: true
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.SyntaxAnnotation.GetHashCode
  yaml: api\Microsoft.CodeAnalysis.SyntaxAnnotation.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxAnnotation
  name:
    CSharp: GetHashCode
  qualifiedName:
    CSharp: GetHashCode
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Syntax\SyntaxAnnotation.cs
    startLine: 111
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
