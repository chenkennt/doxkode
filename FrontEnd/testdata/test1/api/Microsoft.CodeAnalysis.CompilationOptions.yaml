id: Microsoft.CodeAnalysis.CompilationOptions
yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
href: api\Microsoft.CodeAnalysis.CompilationOptions
name:
  CSharp: CompilationOptions
qualifiedName:
  CSharp: CompilationOptions
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:\Repo\RoslynGit\
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
  startLine: 13
summary: Represents compilation options common to C# and VB.
syntax:
  content:
    CSharp: public abstract class CompilationOptions
inheritance:
- id: T:System.Object
  href: System.Runtime
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.CompilationOptions.OutputKind
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: OutputKind
  qualifiedName:
    CSharp: OutputKind
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 18
  summary: The kind of assembly generated when emitted.
  syntax:
    content:
      CSharp: public OutputKind OutputKind
    parameters:
    - id: OutputKind
      type:
        id: OutputKind
        href: D:\Repo\RoslynGit\src\Compilers\Core\Portable\OutputKind.cs
- id: Microsoft.CodeAnalysis.CompilationOptions.get_OutputKind
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: get_OutputKind
  qualifiedName:
    CSharp: get_OutputKind
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 18
- id: Microsoft.CodeAnalysis.CompilationOptions.ModuleName
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: ModuleName
  qualifiedName:
    CSharp: ModuleName
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 30
  summary: Name of the primary module, or null if a default name should be used.
  syntax:
    content:
      CSharp: public string ModuleName
    parameters:
    - id: ModuleName
      type:
        id: T:System.String
        href: System.Runtime
        isExternal: true
- id: Microsoft.CodeAnalysis.CompilationOptions.get_ModuleName
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: get_ModuleName
  qualifiedName:
    CSharp: get_ModuleName
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 30
- id: Microsoft.CodeAnalysis.CompilationOptions.ScriptClassName
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: ScriptClassName
  qualifiedName:
    CSharp: ScriptClassName
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 36
  summary: "The full name of a global implicit class (script class). This class implicitly encapsulates top-level statements, \r\n    type declarations, and member declarations. Could be a namespace qualified name."
  syntax:
    content:
      CSharp: public string ScriptClassName
    parameters:
    - id: ScriptClassName
      type:
        id: T:System.String
        href: System.Runtime
        isExternal: true
- id: Microsoft.CodeAnalysis.CompilationOptions.get_ScriptClassName
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: get_ScriptClassName
  qualifiedName:
    CSharp: get_ScriptClassName
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 36
- id: Microsoft.CodeAnalysis.CompilationOptions.MainTypeName
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: MainTypeName
  qualifiedName:
    CSharp: MainTypeName
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 42
  summary: >-
    The full name of a type that declares static Main method. Must be a valid non-generic namespace-qualified name.

        Null if any static Main method is a candidate for an entry point.
  syntax:
    content:
      CSharp: public string MainTypeName
    parameters:
    - id: MainTypeName
      type:
        id: T:System.String
        href: System.Runtime
        isExternal: true
- id: Microsoft.CodeAnalysis.CompilationOptions.get_MainTypeName
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: get_MainTypeName
  qualifiedName:
    CSharp: get_MainTypeName
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 42
- id: Microsoft.CodeAnalysis.CompilationOptions.CryptoKeyFile
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: CryptoKeyFile
  qualifiedName:
    CSharp: CryptoKeyFile
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 51
  summary: The name of the file containing the key with which to sign the output.
  syntax:
    content:
      CSharp: public string CryptoKeyFile
    parameters:
    - id: CryptoKeyFile
      type:
        id: T:System.String
        href: System.Runtime
        isExternal: true
- id: Microsoft.CodeAnalysis.CompilationOptions.get_CryptoKeyFile
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: get_CryptoKeyFile
  qualifiedName:
    CSharp: get_CryptoKeyFile
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 51
- id: Microsoft.CodeAnalysis.CompilationOptions.CryptoKeyContainer
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: CryptoKeyContainer
  qualifiedName:
    CSharp: CryptoKeyContainer
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 56
  summary: The CSP container containing the key with which to sign the output.
  syntax:
    content:
      CSharp: public string CryptoKeyContainer
    parameters:
    - id: CryptoKeyContainer
      type:
        id: T:System.String
        href: System.Runtime
        isExternal: true
- id: Microsoft.CodeAnalysis.CompilationOptions.get_CryptoKeyContainer
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: get_CryptoKeyContainer
  qualifiedName:
    CSharp: get_CryptoKeyContainer
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 56
- id: Microsoft.CodeAnalysis.CompilationOptions.DelaySign
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: DelaySign
  qualifiedName:
    CSharp: DelaySign
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 62
  summary: >-
    Turn off strong name signing when you have supplied a key either through

        attributes or [Microsoft.CodeAnalysis.CompilationOptions.CryptoKeyContainer](api\Microsoft.CodeAnalysis.CompilationOptions) or [Microsoft.CodeAnalysis.CompilationOptions.CryptoKeyFile](api\Microsoft.CodeAnalysis.CompilationOptions).
  syntax:
    content:
      CSharp: public bool ? DelaySign
    parameters:
    - id: DelaySign
      type:
        id: T:System.Nullable{System.Boolean}
        href: System.Runtime
        isExternal: true
- id: Microsoft.CodeAnalysis.CompilationOptions.get_DelaySign
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: get_DelaySign
  qualifiedName:
    CSharp: get_DelaySign
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 62
- id: Microsoft.CodeAnalysis.CompilationOptions.CheckOverflow
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: CheckOverflow
  qualifiedName:
    CSharp: CheckOverflow
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 67
  summary: Whether bounds checking on integer arithmetic is enforced by default or not.
  syntax:
    content:
      CSharp: public bool CheckOverflow
    parameters:
    - id: CheckOverflow
      type:
        id: T:System.Boolean
        href: System.Runtime
        isExternal: true
- id: Microsoft.CodeAnalysis.CompilationOptions.get_CheckOverflow
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: get_CheckOverflow
  qualifiedName:
    CSharp: get_CheckOverflow
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 67
- id: Microsoft.CodeAnalysis.CompilationOptions.Platform
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: Platform
  qualifiedName:
    CSharp: Platform
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 72
  summary: Specifies which version of the common language runtime (CLR) can run the assembly.
  syntax:
    content:
      CSharp: public Platform Platform
    parameters:
    - id: Platform
      type:
        id: Platform
        href: D:\Repo\RoslynGit\src\Compilers\Core\Portable\Compilation\Platform.cs
- id: Microsoft.CodeAnalysis.CompilationOptions.get_Platform
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: get_Platform
  qualifiedName:
    CSharp: get_Platform
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 72
- id: Microsoft.CodeAnalysis.CompilationOptions.OptimizationLevel
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: OptimizationLevel
  qualifiedName:
    CSharp: OptimizationLevel
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 78
  summary: >-
    Specifies whether or not optimizations should be performed on the output IL.

        This is independent of whether or not PDB information is generated.
  syntax:
    content:
      CSharp: public OptimizationLevel OptimizationLevel
    parameters:
    - id: OptimizationLevel
      type:
        id: OptimizationLevel
        href: D:\Repo\RoslynGit\src\Compilers\Core\Portable\Compilation\OptimizationLevel.cs
- id: Microsoft.CodeAnalysis.CompilationOptions.get_OptimizationLevel
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: get_OptimizationLevel
  qualifiedName:
    CSharp: get_OptimizationLevel
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 78
- id: Microsoft.CodeAnalysis.CompilationOptions.GeneralDiagnosticOption
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: GeneralDiagnosticOption
  qualifiedName:
    CSharp: GeneralDiagnosticOption
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 83
  summary: Global warning report option
  syntax:
    content:
      CSharp: public ReportDiagnostic GeneralDiagnosticOption
    parameters:
    - id: GeneralDiagnosticOption
      type:
        id: ReportDiagnostic
        href: D:\Repo\RoslynGit\src\Compilers\Core\Portable\Diagnostic\ReportDiagnostic.cs
- id: Microsoft.CodeAnalysis.CompilationOptions.get_GeneralDiagnosticOption
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: get_GeneralDiagnosticOption
  qualifiedName:
    CSharp: get_GeneralDiagnosticOption
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 83
- id: Microsoft.CodeAnalysis.CompilationOptions.WarningLevel
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: WarningLevel
  qualifiedName:
    CSharp: WarningLevel
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 88
  summary: Global warning level (from 0 to 4).
  syntax:
    content:
      CSharp: public int WarningLevel
    parameters:
    - id: WarningLevel
      type:
        id: T:System.Int32
        href: System.Runtime
        isExternal: true
- id: Microsoft.CodeAnalysis.CompilationOptions.get_WarningLevel
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: get_WarningLevel
  qualifiedName:
    CSharp: get_WarningLevel
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 88
- id: Microsoft.CodeAnalysis.CompilationOptions.ConcurrentBuild
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: ConcurrentBuild
  qualifiedName:
    CSharp: ConcurrentBuild
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 93
  summary: Specifies whether building compilation may use multiple threads.
  syntax:
    content:
      CSharp: public bool ConcurrentBuild
    parameters:
    - id: ConcurrentBuild
      type:
        id: T:System.Boolean
        href: System.Runtime
        isExternal: true
- id: Microsoft.CodeAnalysis.CompilationOptions.get_ConcurrentBuild
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: get_ConcurrentBuild
  qualifiedName:
    CSharp: get_ConcurrentBuild
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 93
- id: Microsoft.CodeAnalysis.CompilationOptions.SpecificDiagnosticOptions
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: SpecificDiagnosticOptions
  qualifiedName:
    CSharp: SpecificDiagnosticOptions
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 114
  summary: Warning report option for each warning.
  syntax:
    content:
      CSharp: public ImmutableDictionary<string, ReportDiagnostic> SpecificDiagnosticOptions
    parameters:
    - id: SpecificDiagnosticOptions
      type:
        id: T:System.Collections.Immutable.ImmutableDictionary{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}
        href: System.Collections.Immutable
        isExternal: true
- id: Microsoft.CodeAnalysis.CompilationOptions.get_SpecificDiagnosticOptions
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: get_SpecificDiagnosticOptions
  qualifiedName:
    CSharp: get_SpecificDiagnosticOptions
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 114
- id: Microsoft.CodeAnalysis.CompilationOptions.MetadataReferenceResolver
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: MetadataReferenceResolver
  qualifiedName:
    CSharp: MetadataReferenceResolver
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 120
  summary: >-
    Resolves paths to metadata references specified in source via #r directives.

        Null if the compilation can't contain references to metadata other than those explicitly passed to its factory (such as #r directives in sources).
  syntax:
    content:
      CSharp: public MetadataReferenceResolver MetadataReferenceResolver
    parameters:
    - id: MetadataReferenceResolver
      type:
        id: MetadataReferenceResolver
        href: D:\Repo\RoslynGit\src\Compilers\Core\Portable\MetadataReference\MetadataReferenceResolver.cs
- id: Microsoft.CodeAnalysis.CompilationOptions.get_MetadataReferenceResolver
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: get_MetadataReferenceResolver
  qualifiedName:
    CSharp: get_MetadataReferenceResolver
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 120
- id: Microsoft.CodeAnalysis.CompilationOptions.XmlReferenceResolver
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: XmlReferenceResolver
  qualifiedName:
    CSharp: XmlReferenceResolver
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 126
  summary: >-
    Gets the resolver for resolving XML document references for the compilation.

        Null if the compilation is not allowed to contain XML file references, such as XML doc comment include tags and permission sets stored in an XML file.
  syntax:
    content:
      CSharp: public XmlReferenceResolver XmlReferenceResolver
    parameters:
    - id: XmlReferenceResolver
      type:
        id: XmlReferenceResolver
        href: D:\Repo\RoslynGit\src\Compilers\Core\Portable\Compilation\XmlReferenceResolver.cs
- id: Microsoft.CodeAnalysis.CompilationOptions.get_XmlReferenceResolver
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: get_XmlReferenceResolver
  qualifiedName:
    CSharp: get_XmlReferenceResolver
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 126
- id: Microsoft.CodeAnalysis.CompilationOptions.SourceReferenceResolver
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: SourceReferenceResolver
  qualifiedName:
    CSharp: SourceReferenceResolver
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 132
  summary: >-
    Gets the resolver for resolving source document references for the compilation.

        Null if the compilation is not allowed to contain source file references, such as #line pragmas and #load directives.
  syntax:
    content:
      CSharp: public SourceReferenceResolver SourceReferenceResolver
    parameters:
    - id: SourceReferenceResolver
      type:
        id: SourceReferenceResolver
        href: D:\Repo\RoslynGit\src\Compilers\Core\Portable\Compilation\SourceReferenceResolver.cs
- id: Microsoft.CodeAnalysis.CompilationOptions.get_SourceReferenceResolver
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: get_SourceReferenceResolver
  qualifiedName:
    CSharp: get_SourceReferenceResolver
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 132
- id: Microsoft.CodeAnalysis.CompilationOptions.StrongNameProvider
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: StrongNameProvider
  qualifiedName:
    CSharp: StrongNameProvider
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 138
  summary: >-
    Provides strong name and signature the source assembly.

        Null if assembly signing is not supported.
  syntax:
    content:
      CSharp: public StrongNameProvider StrongNameProvider
    parameters:
    - id: StrongNameProvider
      type:
        id: StrongNameProvider
        href: D:\Repo\RoslynGit\src\Compilers\Core\Portable\StrongNameProvider.cs
- id: Microsoft.CodeAnalysis.CompilationOptions.get_StrongNameProvider
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: get_StrongNameProvider
  qualifiedName:
    CSharp: get_StrongNameProvider
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 138
- id: Microsoft.CodeAnalysis.CompilationOptions.AssemblyIdentityComparer
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: AssemblyIdentityComparer
  qualifiedName:
    CSharp: AssemblyIdentityComparer
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 144
  summary: >-
    Used to compare assembly identities. May implement unification and portability policies specific to the target platform.

        [Microsoft.CodeAnalysis.AssemblyIdentityComparer.Default](api\Microsoft.CodeAnalysis.AssemblyIdentityComparer) if not specified.
  syntax:
    content:
      CSharp: public AssemblyIdentityComparer AssemblyIdentityComparer
    parameters:
    - id: AssemblyIdentityComparer
      type:
        id: AssemblyIdentityComparer
        href: D:\Repo\RoslynGit\src\Compilers\Core\Portable\MetadataReference\AssemblyIdentityComparer.cs
- id: Microsoft.CodeAnalysis.CompilationOptions.get_AssemblyIdentityComparer
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: get_AssemblyIdentityComparer
  qualifiedName:
    CSharp: get_AssemblyIdentityComparer
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 144
- id: Microsoft.CodeAnalysis.CompilationOptions.WithGeneralDiagnosticOption(Microsoft.CodeAnalysis.ReportDiagnostic)
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: WithGeneralDiagnosticOption
  qualifiedName:
    CSharp: WithGeneralDiagnosticOption
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 249
  summary: Creates a new options instance with the specified general diagnostic option.
  syntax:
    content:
      CSharp: public CompilationOptions WithGeneralDiagnosticOption(ReportDiagnostic value)
    parameters:
    - id: value
      type:
        id: ReportDiagnostic
        href: D:\Repo\RoslynGit\src\Compilers\Core\Portable\Diagnostic\ReportDiagnostic.cs
    return:
      id: CompilationOptions
- id: Microsoft.CodeAnalysis.CompilationOptions.WithSpecificDiagnosticOptions(System.Collections.Immutable.ImmutableDictionary{System.String,Microsoft.CodeAnalysis.ReportDiagnostic})
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: WithSpecificDiagnosticOptions
  qualifiedName:
    CSharp: WithSpecificDiagnosticOptions
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 257
  summary: Creates a new options instance with the specified diagnostic-specific options.
  syntax:
    content:
      CSharp: public CompilationOptions WithSpecificDiagnosticOptions(ImmutableDictionary<string, ReportDiagnostic> value)
    parameters:
    - id: value
      type:
        id: T:System.Collections.Immutable.ImmutableDictionary{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}
        href: System.Collections.Immutable
        isExternal: true
    return:
      id: CompilationOptions
- id: Microsoft.CodeAnalysis.CompilationOptions.WithSpecificDiagnosticOptions(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}})
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: WithSpecificDiagnosticOptions
  qualifiedName:
    CSharp: WithSpecificDiagnosticOptions
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 265
  summary: Creates a new options instance with the specified diagnostic-specific options.
  syntax:
    content:
      CSharp: public CompilationOptions WithSpecificDiagnosticOptions(IEnumerable<KeyValuePair<string, ReportDiagnostic>> value)
    parameters:
    - id: value
      type:
        id: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}}
        href: System.Runtime
        isExternal: true
    return:
      id: CompilationOptions
- id: Microsoft.CodeAnalysis.CompilationOptions.WithOutputKind(Microsoft.CodeAnalysis.OutputKind)
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: WithOutputKind
  qualifiedName:
    CSharp: WithOutputKind
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 273
  summary: Creates a new options instance with the specified output kind.
  syntax:
    content:
      CSharp: public CompilationOptions WithOutputKind(OutputKind kind)
    parameters:
    - id: kind
      type:
        id: OutputKind
        href: D:\Repo\RoslynGit\src\Compilers\Core\Portable\OutputKind.cs
    return:
      id: CompilationOptions
- id: Microsoft.CodeAnalysis.CompilationOptions.WithPlatform(Microsoft.CodeAnalysis.Platform)
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: WithPlatform
  qualifiedName:
    CSharp: WithPlatform
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 281
  summary: Creates a new options instance with the specified platform.
  syntax:
    content:
      CSharp: public CompilationOptions WithPlatform(Platform platform)
    parameters:
    - id: platform
      type:
        id: Platform
        href: D:\Repo\RoslynGit\src\Compilers\Core\Portable\Compilation\Platform.cs
    return:
      id: CompilationOptions
- id: Microsoft.CodeAnalysis.CompilationOptions.WithOptimizationLevel(Microsoft.CodeAnalysis.OptimizationLevel)
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: WithOptimizationLevel
  qualifiedName:
    CSharp: WithOptimizationLevel
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 289
  summary: Creates a new options instance with optimizations enabled or disabled.
  syntax:
    content:
      CSharp: public CompilationOptions WithOptimizationLevel(OptimizationLevel value)
    parameters:
    - id: value
      type:
        id: OptimizationLevel
        href: D:\Repo\RoslynGit\src\Compilers\Core\Portable\Compilation\OptimizationLevel.cs
    return:
      id: CompilationOptions
- id: Microsoft.CodeAnalysis.CompilationOptions.WithXmlReferenceResolver(Microsoft.CodeAnalysis.XmlReferenceResolver)
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: WithXmlReferenceResolver
  qualifiedName:
    CSharp: WithXmlReferenceResolver
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 294
  syntax:
    content:
      CSharp: public CompilationOptions WithXmlReferenceResolver(XmlReferenceResolver resolver)
    parameters:
    - id: resolver
      type:
        id: XmlReferenceResolver
        href: D:\Repo\RoslynGit\src\Compilers\Core\Portable\Compilation\XmlReferenceResolver.cs
    return:
      id: CompilationOptions
- id: Microsoft.CodeAnalysis.CompilationOptions.WithSourceReferenceResolver(Microsoft.CodeAnalysis.SourceReferenceResolver)
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: WithSourceReferenceResolver
  qualifiedName:
    CSharp: WithSourceReferenceResolver
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 299
  syntax:
    content:
      CSharp: public CompilationOptions WithSourceReferenceResolver(SourceReferenceResolver resolver)
    parameters:
    - id: resolver
      type:
        id: SourceReferenceResolver
        href: D:\Repo\RoslynGit\src\Compilers\Core\Portable\Compilation\SourceReferenceResolver.cs
    return:
      id: CompilationOptions
- id: Microsoft.CodeAnalysis.CompilationOptions.WithMetadataReferenceResolver(Microsoft.CodeAnalysis.MetadataReferenceResolver)
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: WithMetadataReferenceResolver
  qualifiedName:
    CSharp: WithMetadataReferenceResolver
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 304
  syntax:
    content:
      CSharp: public CompilationOptions WithMetadataReferenceResolver(MetadataReferenceResolver resolver)
    parameters:
    - id: resolver
      type:
        id: MetadataReferenceResolver
        href: D:\Repo\RoslynGit\src\Compilers\Core\Portable\MetadataReference\MetadataReferenceResolver.cs
    return:
      id: CompilationOptions
- id: Microsoft.CodeAnalysis.CompilationOptions.WithAssemblyIdentityComparer(Microsoft.CodeAnalysis.AssemblyIdentityComparer)
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: WithAssemblyIdentityComparer
  qualifiedName:
    CSharp: WithAssemblyIdentityComparer
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 309
  syntax:
    content:
      CSharp: public CompilationOptions WithAssemblyIdentityComparer(AssemblyIdentityComparer comparer)
    parameters:
    - id: comparer
      type:
        id: AssemblyIdentityComparer
        href: D:\Repo\RoslynGit\src\Compilers\Core\Portable\MetadataReference\AssemblyIdentityComparer.cs
    return:
      id: CompilationOptions
- id: Microsoft.CodeAnalysis.CompilationOptions.WithStrongNameProvider(Microsoft.CodeAnalysis.StrongNameProvider)
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: WithStrongNameProvider
  qualifiedName:
    CSharp: WithStrongNameProvider
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 314
  syntax:
    content:
      CSharp: public CompilationOptions WithStrongNameProvider(StrongNameProvider provider)
    parameters:
    - id: provider
      type:
        id: StrongNameProvider
        href: D:\Repo\RoslynGit\src\Compilers\Core\Portable\StrongNameProvider.cs
    return:
      id: CompilationOptions
- id: Microsoft.CodeAnalysis.CompilationOptions.Errors
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: Errors
  qualifiedName:
    CSharp: Errors
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 345
  summary: Errors collection related to an incompatible set of compilation options
  syntax:
    content:
      CSharp: public ImmutableArray<Diagnostic> Errors
    parameters:
    - id: Errors
      type:
        id: T:System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostic}
        href: System.Collections.Immutable
        isExternal: true
- id: Microsoft.CodeAnalysis.CompilationOptions.get_Errors
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: get_Errors
  qualifiedName:
    CSharp: get_Errors
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 347
- id: Microsoft.CodeAnalysis.CompilationOptions.Equals(System.Object)
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Equals
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 350
  syntax:
    content:
      CSharp: public abstract override bool Equals(object obj);
    parameters:
    - id: obj
      type:
        id: T:System.Object
        href: System.Runtime
        isExternal: true
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.CompilationOptions.GetHashCode
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: GetHashCode
  qualifiedName:
    CSharp: GetHashCode
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 388
  syntax:
    content:
      CSharp: public abstract override int GetHashCode();
    parameters: []
    return:
      id: Int32
- id: Microsoft.CodeAnalysis.CompilationOptions.op_Equality(Microsoft.CodeAnalysis.CompilationOptions,Microsoft.CodeAnalysis.CompilationOptions)
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: op_Equality
  qualifiedName:
    CSharp: op_Equality
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 416
- id: Microsoft.CodeAnalysis.CompilationOptions.op_Inequality(Microsoft.CodeAnalysis.CompilationOptions,Microsoft.CodeAnalysis.CompilationOptions)
  yaml: api\Microsoft.CodeAnalysis.CompilationOptions.yaml
  href: api\Microsoft.CodeAnalysis.CompilationOptions
  name:
    CSharp: op_Inequality
  qualifiedName:
    CSharp: op_Inequality
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:\Repo\RoslynGit\
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src\Compilers\Core\Portable\Compilation\CompilationOptions.cs
    startLine: 421
