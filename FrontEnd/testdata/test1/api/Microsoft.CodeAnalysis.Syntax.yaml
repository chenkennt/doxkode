id: Microsoft.CodeAnalysis.Syntax
yaml: api\Microsoft.CodeAnalysis.Syntax.yaml
href: api\Microsoft.CodeAnalysis.Syntax
name:
  CSharp: Syntax
qualifiedName:
  CSharp: Syntax
type: Namespace
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:\Repo\RoslynGit\
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src\Compilers\Core\Portable\Syntax\AbstractWarningStateMap.cs
  startLine: 6
items:
- id: Microsoft.CodeAnalysis.AnnotationExtensions
  yaml: api\Microsoft.CodeAnalysis.AnnotationExtensions.yaml
  href: api\Microsoft.CodeAnalysis.AnnotationExtensions
  type: Class
- id: Microsoft.CodeAnalysis.ChildSyntaxList
  yaml: api\Microsoft.CodeAnalysis.ChildSyntaxList.yaml
  href: api\Microsoft.CodeAnalysis.ChildSyntaxList
  type: Struct
- id: Microsoft.CodeAnalysis.ChildSyntaxList.Enumerator
  yaml: api\Microsoft.CodeAnalysis.ChildSyntaxList.Enumerator.yaml
  href: api\Microsoft.CodeAnalysis.ChildSyntaxList.Enumerator
  type: Struct
  summary: >+
    Enumerates the elements of a [Microsoft.CodeAnalysis.ChildSyntaxList](#/api\Microsoft.CodeAnalysis.ChildSyntaxList).

- id: Microsoft.CodeAnalysis.ChildSyntaxList.Reversed
  yaml: api\Microsoft.CodeAnalysis.ChildSyntaxList.Reversed.yaml
  href: api\Microsoft.CodeAnalysis.ChildSyntaxList.Reversed
  type: Struct
- id: Microsoft.CodeAnalysis.ChildSyntaxList.Reversed.Enumerator
  yaml: api\Microsoft.CodeAnalysis.ChildSyntaxList.Reversed.Enumerator.yaml
  href: api\Microsoft.CodeAnalysis.ChildSyntaxList.Reversed.Enumerator
  type: Struct
- id: Microsoft.CodeAnalysis.IStructuredTriviaSyntax
  yaml: api\Microsoft.CodeAnalysis.IStructuredTriviaSyntax.yaml
  href: api\Microsoft.CodeAnalysis.IStructuredTriviaSyntax
  type: Interface
  summary: >+
    Represents the root node of a structured trivia tree (for example, a preprocessor directive

    or a documentation comment). From this root node you can traverse back up to the containing

    trivia in the outer tree that contains it.

- id: Microsoft.CodeAnalysis.LineVisibility
  yaml: api\Microsoft.CodeAnalysis.LineVisibility.yaml
  href: api\Microsoft.CodeAnalysis.LineVisibility
  type: Enum
  summary: >+
    The state of the visibility of a line.

- id: Microsoft.CodeAnalysis.SeparatedSyntaxList`1
  yaml: api\Microsoft.CodeAnalysis.SeparatedSyntaxList`1.yaml
  href: api\Microsoft.CodeAnalysis.SeparatedSyntaxList`1
  type: Struct
- id: Microsoft.CodeAnalysis.SeparatedSyntaxList`1.Enumerator
  yaml: api\Microsoft.CodeAnalysis.SeparatedSyntaxList`1.Enumerator.yaml
  href: api\Microsoft.CodeAnalysis.SeparatedSyntaxList`1.Enumerator
  type: Struct
- id: Microsoft.CodeAnalysis.SyntaxAnnotation
  yaml: api\Microsoft.CodeAnalysis.SyntaxAnnotation.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxAnnotation
  type: Class
  summary: >+
    A SynatxAnnotation is used to annotate syntax elements with additional information.



    Since syntax elements are immutable, annotating them requires creating new instances of them

    with the annotations attached.

- id: Microsoft.CodeAnalysis.SyntaxList`1
  yaml: api\Microsoft.CodeAnalysis.SyntaxList`1.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxList`1
  type: Struct
  summary: >+
    A list of [Microsoft.CodeAnalysis.SyntaxNode](#/api\Microsoft.CodeAnalysis.SyntaxNode).

- id: Microsoft.CodeAnalysis.SyntaxList`1.Enumerator
  yaml: api\Microsoft.CodeAnalysis.SyntaxList`1.Enumerator.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxList`1.Enumerator
  type: Struct
- id: Microsoft.CodeAnalysis.SyntaxNode
  yaml: api\Microsoft.CodeAnalysis.SyntaxNode.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxNode
  type: Class
  summary: >+
    Represents a non-terminal node in the syntax tree. This is the language agnostic equivalent of [Microsoft.CodeAnalysis.CSharp.SyntaxNode](#) and [Microsoft.CodeAnalysis.VisualBasic.SyntaxNode](#).

- id: Microsoft.CodeAnalysis.SyntaxNodeExtensions
  yaml: api\Microsoft.CodeAnalysis.SyntaxNodeExtensions.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxNodeExtensions
  type: Class
- id: Microsoft.CodeAnalysis.SyntaxNodeOrToken
  yaml: api\Microsoft.CodeAnalysis.SyntaxNodeOrToken.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxNodeOrToken
  type: Struct
  summary: >+
    A wrapper for either a syntax node ([Microsoft.CodeAnalysis.SyntaxNode](#/api\Microsoft.CodeAnalysis.SyntaxNode)) or a syntax token ([Microsoft.CodeAnalysis.SyntaxToken](#/api\Microsoft.CodeAnalysis.SyntaxToken)).

- id: Microsoft.CodeAnalysis.SyntaxNodeOrTokenList
  yaml: api\Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxNodeOrTokenList
  type: Struct
  summary: >+
    A list of [Microsoft.CodeAnalysis.SyntaxNodeOrToken](#/api\Microsoft.CodeAnalysis.SyntaxNodeOrToken) structures.

- id: Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Enumerator
  yaml: api\Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Enumerator.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Enumerator
  type: Struct
  summary: >+
    Enumerator for lists of SyntaxNodeOrToken structs.

- id: Microsoft.CodeAnalysis.SyntaxReference
  yaml: api\Microsoft.CodeAnalysis.SyntaxReference.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxReference
  type: Class
  summary: >+
    A reference to a syntax node.

- id: Microsoft.CodeAnalysis.SyntaxRemoveOptions
  yaml: api\Microsoft.CodeAnalysis.SyntaxRemoveOptions.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxRemoveOptions
  type: Enum
- id: Microsoft.CodeAnalysis.SyntaxToken
  yaml: api\Microsoft.CodeAnalysis.SyntaxToken.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxToken
  type: Struct
  summary: >+
    Represents a token in the syntax tree. This is the language agnostic equivalent of [Microsoft.CodeAnalysis.CSharp.SyntaxToken](#) and [Microsoft.CodeAnalysis.VisualBasic.SyntaxToken](#).

- id: Microsoft.CodeAnalysis.SyntaxTokenList
  yaml: api\Microsoft.CodeAnalysis.SyntaxTokenList.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxTokenList
  type: Struct
  summary: >+
    Represents a read-only list of [Microsoft.CodeAnalysis.SyntaxToken](#/api\Microsoft.CodeAnalysis.SyntaxToken).

- id: Microsoft.CodeAnalysis.SyntaxTokenList.Enumerator
  yaml: api\Microsoft.CodeAnalysis.SyntaxTokenList.Enumerator.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxTokenList.Enumerator
  type: Struct
  summary: >+
    A structure for enumerating a [Microsoft.CodeAnalysis.SyntaxTokenList](#/api\Microsoft.CodeAnalysis.SyntaxTokenList)

- id: Microsoft.CodeAnalysis.SyntaxTokenList.Reversed
  yaml: api\Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxTokenList.Reversed
  type: Struct
  summary: >+
    reversed enumerable

- id: Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.Enumerator
  yaml: api\Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.Enumerator.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.Enumerator
  type: Struct
- id: Microsoft.CodeAnalysis.SyntaxTree
  yaml: api\Microsoft.CodeAnalysis.SyntaxTree.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxTree
  type: Class
  summary: >+
    The parsed representation of a source document.

- id: Microsoft.CodeAnalysis.SyntaxTrivia
  yaml: api\Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxTrivia
  type: Struct
  summary: >+
    Represents a trivia in the syntax tree. This is the language agnostic equivalent of [Microsoft.CodeAnalysis.CSharp.SyntaxTrivia](#) and [Microsoft.CodeAnalysis.VisualBasic.SyntaxTrivia](#).

- id: Microsoft.CodeAnalysis.SyntaxTriviaList
  yaml: api\Microsoft.CodeAnalysis.SyntaxTriviaList.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxTriviaList
  type: Struct
  summary: >+
    Represents a read-only list of [Microsoft.CodeAnalysis.SyntaxTrivia](#/api\Microsoft.CodeAnalysis.SyntaxTrivia).

- id: Microsoft.CodeAnalysis.SyntaxTriviaList.Enumerator
  yaml: api\Microsoft.CodeAnalysis.SyntaxTriviaList.Enumerator.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxTriviaList.Enumerator
  type: Struct
- id: Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed
  yaml: api\Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed
  type: Struct
  summary: >+
    reversed enumerable

- id: Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.Enumerator
  yaml: api\Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.Enumerator.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.Enumerator
  type: Struct
- id: Microsoft.CodeAnalysis.SyntaxWalker
  yaml: api\Microsoft.CodeAnalysis.SyntaxWalker.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxWalker
  type: Class
  summary: >+
    Walks the syntax tree, allowing subclasses to operate on all nodes, token and trivia.  The

    walker will perform a depth first walk of the tree.

- id: Microsoft.CodeAnalysis.SyntaxWalkerDepth
  yaml: api\Microsoft.CodeAnalysis.SyntaxWalkerDepth.yaml
  href: api\Microsoft.CodeAnalysis.SyntaxWalkerDepth
  type: Enum
  summary: >+
    enum to specify how deep walker should decent into

