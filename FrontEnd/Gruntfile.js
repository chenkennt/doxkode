module.exports = function(grunt) {

  // Project configuration.
  grunt.initConfig({
    pkg: grunt.file.readJSON('package.json'),
    ownJsFiles: [
        'app/js/docs.js',
        'app/js/search-worker.js',
        'app/js/pages-data.js',
        'app/js/versions-data.js'
    ],
    // REMEMBER:
    // * ORDER OF FILES IS IMPORTANT
    // * ALWAYS ADD EACH FILE TO BOTH minified/unminified SECTIONS!
    cssFiles: [
        'app/bower_components/bootstrap/dist/css/bootstrap.min.css',
        'app/bower_components/google-code-prettify/styles/sons-of-obsidian.css',
        'app/css/prettify-theme.css',
        'app/css/docs.css',
        'app/css/animations.css'
    ],
    jsFiles: [
        'app/bower_components/js-yaml/dist/js-yaml.min.js',
        'app/bower_components/angular/angular.min.js',
        'app/bower_components/angular-resource/angular-resource.min.js',
        'app/bower_components/angular-route/angular-route.min.js',
        'app/bower_components/angular-cookies/angular-cookies.min.js',
        'app/bower_components/angular-sanitize/angular-sanitize.min.js',
        'app/bower_components/angular-touch/angular-touch.min.js',
        'app/bower_components/angular-animate/angular-animate.min.js',
        'app/bower_components/marked/lib/marked.js',
        'app/bower_components/lunr.js/lunr.min.js',
        'app/bower_components/google-code-prettify/src/prettify.js',
        'app/bower_components/google-code-prettify/src/lang-css.js',
        'app/js/angular-bootstrap/bootstrap.min.js',
        'app/js/angular-bootstrap/dropdown-toggle.min.js'
    ],

    concat: {
        options: {
            //banner: '<%= banner %>',
            stripBanners: true
        },
        dev: {
            src: '<%= ownJsFiles %>',
            dest: 'tmp/<%= pkg.name %>.js'
        }
    },
    uglify: {
      options: {
        banner: '/*! Generated by doc-as-code: <%= pkg.name %> <%= grunt.template.today("yyyy-mm-dd") %> */\n'
      },
      build: {
        src: '<%= ownJsFiles %>',
        dest: 'tmp/<%= pkg.name %>.min.js'
      }
    },
    index: {
        release: {
            template: 'index.tmpl',
            dest: 'dist/docascode.html'
        },
        debug: {
            template: 'index.tmpl',
            dest: 'dist/docascode-debug.html'
        },
        default: {
            template: 'app/index.tmpl',
            dest: 'dist/docascode.html'
        }
    },
    copy: {
        release: {
            expand: false,
            flatten: true,
            src: [ 'dist/docascode.html' ],
            dest: 'release/docascode-<%= grunt.config("pkg").version %>/docascode.html'
        },
        release_debug: {
            expand: false,
            flatten: true,
            src: [ 'dist/docascode-debug.html' ],
            dest: 'release/docascode-<%= grunt.config("pkg").version %>/docascode-debug.html'
        },
        release_templates: {
            expand: true,
            flatten: true,
            src: [ 'release_templates/*' ],
            dest: 'release/docascode-<%= grunt.config("pkg").version %>/'
        }
     }
  });

  grunt.loadNpmTasks('grunt-contrib-uglify');

  grunt.registerTask('default', ['uglify']);
};