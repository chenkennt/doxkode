{
  "Namespaces": [
    {
      "Classes": [
        {
          "InheritanceHierarchy": [
            "T:System.Object",
            "T:DocAsCode.EntityModel.DocMetadata"
          ],
          "Methods": [
            {
              "MethodSyntax": {
                "Parameters": {},
                "Returns": {
                  "T:System.Collections.Generic.IEnumerable{DocAsCode.EntityModel.DocMetadata}": ""
                },
                "Content": "public IEnumerable<DocMetadata> GetChildrenDocMetadata()",
                "XmlDocumentation": "<member name=\"M:DocAsCode.EntityModel.AssemblyDocMetadata.GetChildrenDocMetadata\">\r\n    <summary>\r\n    TODO: implement this to return all the supported DocMetadata\r\n    </summary>\r\n    <returns></returns>\r\n</member>\r\n"
              },
              "Syntax": {
                "Parameters": {},
                "Returns": {
                  "T:System.Collections.Generic.IEnumerable{DocAsCode.EntityModel.DocMetadata}": ""
                },
                "Content": "public IEnumerable<DocMetadata> GetChildrenDocMetadata()",
                "XmlDocumentation": "<member name=\"M:DocAsCode.EntityModel.AssemblyDocMetadata.GetChildrenDocMetadata\">\r\n    <summary>\r\n    TODO: implement this to return all the supported DocMetadata\r\n    </summary>\r\n    <returns></returns>\r\n</member>\r\n"
              },
              "Id": "M:DocAsCode.EntityModel.AssemblyDocMetadata.GetChildrenDocMetadata",
              "Parent": "T:DocAsCode.EntityModel.AssemblyDocMetadata",
              "XmlDocumentation": "<member name=\"M:DocAsCode.EntityModel.AssemblyDocMetadata.GetChildrenDocMetadata\">\r\n    <summary>\r\n    TODO: implement this to return all the supported DocMetadata\r\n    </summary>\r\n    <returns></returns>\r\n</member>\r\n"
            },
            {
              "MethodSyntax": {
                "Parameters": {
                  "T:DocAsCode.EntityModel.NamespaceDocMetadata : mta": ""
                },
                "Returns": {
                  "T:System.Boolean": ""
                },
                "Content": "public bool TryAddNamespace(NamespaceDocMetadata mta)",
                "XmlDocumentation": ""
              },
              "Syntax": {
                "Parameters": {
                  "T:DocAsCode.EntityModel.NamespaceDocMetadata : mta": ""
                },
                "Returns": {
                  "T:System.Boolean": ""
                },
                "Content": "public bool TryAddNamespace(NamespaceDocMetadata mta)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.AssemblyDocMetadata.TryAddNamespace(DocAsCode.EntityModel.NamespaceDocMetadata)",
              "Parent": "T:DocAsCode.EntityModel.AssemblyDocMetadata",
              "XmlDocumentation": ""
            }
          ],
          "Properties": [
            {
              "Syntax": {
                "Content": "public IEnumerable<NamespaceDocMetadata> Namespaces",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.AssemblyDocMetadata.Namespaces",
              "Parent": "T:DocAsCode.EntityModel.AssemblyDocMetadata",
              "XmlDocumentation": ""
            }
          ],
          "Constructors": [
            {
              "Syntax": {
                "Content": "public AssemblyDocMetadata()",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.AssemblyDocMetadata.#ctor",
              "Parent": "T:DocAsCode.EntityModel.AssemblyDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public AssemblyDocMetadata(string name): base (name)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.AssemblyDocMetadata.#ctor(System.String)",
              "Parent": "T:DocAsCode.EntityModel.AssemblyDocMetadata",
              "XmlDocumentation": ""
            }
          ],
          "Syntax": {
            "Content": "public class AssemblyDocMetadata",
            "XmlDocumentation": "<member name=\"T:DocAsCode.EntityModel.AssemblyDocMetadata\">\r\n    <summary>\r\n    Doc metadata is per project\r\n    </summary>\r\n</member>\r\n"
          },
          "Id": "T:DocAsCode.EntityModel.AssemblyDocMetadata",
          "Parent": "N:DocAsCode.EntityModel",
          "XmlDocumentation": "<member name=\"T:DocAsCode.EntityModel.AssemblyDocMetadata\">\r\n    <summary>\r\n    Doc metadata is per project\r\n    </summary>\r\n</member>\r\n"
        },
        {
          "InheritanceHierarchy": [
            "T:System.Object",
            "T:DocAsCode.EntityModel.DocMetadata",
            "T:DocAsCode.EntityModel.MemberDocMetadata",
            "T:DocAsCode.EntityModel.CompositeDocMetadata"
          ],
          "Properties": [
            {
              "Syntax": {
                "Content": "public IEnumerable<ConstructorDocMetadata> Constructors",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.ClassDocMetadata.Constructors",
              "Parent": "T:DocAsCode.EntityModel.ClassDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public IEnumerable<EventDocMetadataDefinition> Events",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.ClassDocMetadata.Events",
              "Parent": "T:DocAsCode.EntityModel.ClassDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public IEnumerable<FieldDocMetadata> Fields",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.ClassDocMetadata.Fields",
              "Parent": "T:DocAsCode.EntityModel.ClassDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public Stack<Identity> InheritanceHierarchy",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.ClassDocMetadata.InheritanceHierarchy",
              "Parent": "T:DocAsCode.EntityModel.ClassDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public IEnumerable<MethodDocMetadata> Methods",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.ClassDocMetadata.Methods",
              "Parent": "T:DocAsCode.EntityModel.ClassDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public IEnumerable<PropertyDocMetadata> Properties",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.ClassDocMetadata.Properties",
              "Parent": "T:DocAsCode.EntityModel.ClassDocMetadata",
              "XmlDocumentation": ""
            }
          ],
          "Constructors": [
            {
              "Syntax": {
                "Content": "public ClassDocMetadata()",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.ClassDocMetadata.#ctor",
              "Parent": "T:DocAsCode.EntityModel.ClassDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public ClassDocMetadata(DocMetadata mta): base (mta)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.ClassDocMetadata.#ctor(DocAsCode.EntityModel.DocMetadata)",
              "Parent": "T:DocAsCode.EntityModel.ClassDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public ClassDocMetadata(string name): base (name)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.ClassDocMetadata.#ctor(System.String)",
              "Parent": "T:DocAsCode.EntityModel.ClassDocMetadata",
              "XmlDocumentation": ""
            }
          ],
          "Syntax": {
            "Content": "public class ClassDocMetadata\r\n\r\n/*public MethodDocMetadata CreateMethod(string name)\r\n        \r\n            return _members[SubMemberType.Method].GetOrAdd(name, s => new DocMetadata(s)\r\n            \r\n                MscorlibVersion = this.MscorlibVersion,\r\n                Assembly = this.Assembly,\r\n                Namespace = this.Namespace,\r\n            );\r\n        */",
            "XmlDocumentation": ""
          },
          "Id": "T:DocAsCode.EntityModel.ClassDocMetadata",
          "Parent": "N:DocAsCode.EntityModel",
          "XmlDocumentation": ""
        },
        {
          "InheritanceHierarchy": [
            "T:System.Object",
            "T:System.ComponentModel.TypeConverter"
          ],
          "Methods": [
            {
              "MethodSyntax": {
                "Parameters": {
                  "T:System.ComponentModel.ITypeDescriptorContext : context": "",
                  "T:System.Type : sourceType": ""
                },
                "Returns": {
                  "T:System.Boolean": ""
                },
                "Content": "public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)",
                "XmlDocumentation": ""
              },
              "Syntax": {
                "Parameters": {
                  "T:System.ComponentModel.ITypeDescriptorContext : context": "",
                  "T:System.Type : sourceType": ""
                },
                "Returns": {
                  "T:System.Boolean": ""
                },
                "Content": "public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)",
              "Parent": "T:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter",
              "XmlDocumentation": ""
            },
            {
              "MethodSyntax": {
                "Parameters": {
                  "T:System.ComponentModel.ITypeDescriptorContext : context": "",
                  "T:System.Type : destinationType": ""
                },
                "Returns": {
                  "T:System.Boolean": ""
                },
                "Content": "public override bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)",
                "XmlDocumentation": ""
              },
              "Syntax": {
                "Parameters": {
                  "T:System.ComponentModel.ITypeDescriptorContext : context": "",
                  "T:System.Type : destinationType": ""
                },
                "Returns": {
                  "T:System.Boolean": ""
                },
                "Content": "public override bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)",
              "Parent": "T:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter",
              "XmlDocumentation": ""
            },
            {
              "MethodSyntax": {
                "Parameters": {
                  "T:System.ComponentModel.ITypeDescriptorContext : context": "",
                  "T:System.Globalization.CultureInfo : culture": "",
                  "T:System.Object : value": ""
                },
                "Returns": {
                  "T:System.Object": ""
                },
                "Content": "public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)",
                "XmlDocumentation": "<member name=\"M:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\">\r\n    <summary>\r\n    Yaml header to CommentId\r\n    </summary>\r\n    <param name=\"context\"></param>\r\n    <param name=\"culture\"></param>\r\n    <param name=\"value\"></param>\r\n    <returns></returns>\r\n</member>\r\n"
              },
              "Syntax": {
                "Parameters": {
                  "T:System.ComponentModel.ITypeDescriptorContext : context": "",
                  "T:System.Globalization.CultureInfo : culture": "",
                  "T:System.Object : value": ""
                },
                "Returns": {
                  "T:System.Object": ""
                },
                "Content": "public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)",
                "XmlDocumentation": "<member name=\"M:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\">\r\n    <summary>\r\n    Yaml header to CommentId\r\n    </summary>\r\n    <param name=\"context\"></param>\r\n    <param name=\"culture\"></param>\r\n    <param name=\"value\"></param>\r\n    <returns></returns>\r\n</member>\r\n"
              },
              "Id": "M:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)",
              "Parent": "T:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter",
              "XmlDocumentation": "<member name=\"M:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\">\r\n    <summary>\r\n    Yaml header to CommentId\r\n    </summary>\r\n    <param name=\"context\"></param>\r\n    <param name=\"culture\"></param>\r\n    <param name=\"value\"></param>\r\n    <returns></returns>\r\n</member>\r\n"
            },
            {
              "MethodSyntax": {
                "Parameters": {
                  "T:System.ComponentModel.ITypeDescriptorContext : context": "",
                  "T:System.Globalization.CultureInfo : culture": "",
                  "T:System.Object : value": "",
                  "T:System.Type : destinationType": ""
                },
                "Returns": {
                  "T:System.Object": ""
                },
                "Content": "public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)",
                "XmlDocumentation": "<member name=\"M:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\">\r\n    <summary>\r\n    CommentId to Yaml header\r\n    </summary>\r\n    <param name=\"context\"></param>\r\n    <param name=\"culture\"></param>\r\n    <param name=\"value\"></param>\r\n    <param name=\"destinationType\"></param>\r\n    <returns></returns>\r\n</member>\r\n"
              },
              "Syntax": {
                "Parameters": {
                  "T:System.ComponentModel.ITypeDescriptorContext : context": "",
                  "T:System.Globalization.CultureInfo : culture": "",
                  "T:System.Object : value": "",
                  "T:System.Type : destinationType": ""
                },
                "Returns": {
                  "T:System.Object": ""
                },
                "Content": "public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)",
                "XmlDocumentation": "<member name=\"M:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\">\r\n    <summary>\r\n    CommentId to Yaml header\r\n    </summary>\r\n    <param name=\"context\"></param>\r\n    <param name=\"culture\"></param>\r\n    <param name=\"value\"></param>\r\n    <param name=\"destinationType\"></param>\r\n    <returns></returns>\r\n</member>\r\n"
              },
              "Id": "M:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)",
              "Parent": "T:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter",
              "XmlDocumentation": "<member name=\"M:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\">\r\n    <summary>\r\n    CommentId to Yaml header\r\n    </summary>\r\n    <param name=\"context\"></param>\r\n    <param name=\"culture\"></param>\r\n    <param name=\"value\"></param>\r\n    <param name=\"destinationType\"></param>\r\n    <returns></returns>\r\n</member>\r\n"
            },
            {
              "MethodSyntax": {
                "Parameters": {
                  "T:System.Array : myArray": ""
                },
                "Returns": {
                  "T:System.Void": ""
                },
                "Content": "public void myTest1(int[] myArray)",
                "XmlDocumentation": ""
              },
              "Syntax": {
                "Parameters": {
                  "T:System.Array : myArray": ""
                },
                "Returns": {
                  "T:System.Void": ""
                },
                "Content": "public void myTest1(int[] myArray)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter.myTest1(System.Int32[])",
              "Parent": "T:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter",
              "XmlDocumentation": ""
            }
          ],
          "Fields": [
            {
              "Syntax": {
                "Content": "CommentIdRegex",
                "XmlDocumentation": "<member name=\"F:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter.CommentIdRegex\">\r\n    <summary>\r\n    Refer to http://msdn.microsoft.com/en-us/library/fsbx0t7x.aspx\r\n    ELEMENT_TYPE_PTR is represented as a '*' following the modified type.\r\n    ELEMENT_TYPE_BYREF is represented as a '@' following the modified type.\r\n    ELEMENT_TYPE_PINNED is represented as a '^' following the modified type. The C# compiler never generates this.\r\n    ELEMENT_TYPE_CMOD_REQ is represented as a '|' and the fully qualified name of the modifier class, following the modified type.The C# compiler never generates this.\r\n    ELEMENT_TYPE_CMOD_OPT is represented as a '!' and the fully qualified name of the modifier class, following the modified type.\r\n    ELEMENT_TYPE_SZARRAY is represented as \"[]\" following the element type of the array.\r\n    ELEMENT_TYPE_GENERICARRAY is represented as \"[?]\" following the element type of the array.The C# compiler never generates this.\r\n    ELEMENT_TYPE_ARRAY is represented as [lowerbound: size, lowerbound:size] where the number of commas is the rank - 1, and the lower bounds and size of each dimension, if known, are represented in decimal. If a lower bound or size is not specified, it is simply omitted. If the lower bound and size for a particular dimension are omitted, the ':' is omitted as well.For example, a 2-dimensional array with 1 as the lower bounds and unspecified sizes is [1:,1:].\r\n    ELEMENT_TYPE_FNPTR is represented as \"=FUNC:type(signature)\", where type is the return type, and signature is the arguments of the method.If there are no arguments, the parentheses are omitted. The C# compiler never generates this.\r\n    For conversion operators only (op_Implicit and op_Explicit), the return value of the method is encoded as a '~' followed by the return type.\r\n    For generic types, the name of the type will be followed by a back tick and then a number that indicates the number of generic type parameters\r\n    </summary>\r\n</member>\r\n"
              },
              "Id": "F:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter.CommentIdRegex",
              "Parent": "T:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter",
              "XmlDocumentation": "<member name=\"F:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter.CommentIdRegex\">\r\n    <summary>\r\n    Refer to http://msdn.microsoft.com/en-us/library/fsbx0t7x.aspx\r\n    ELEMENT_TYPE_PTR is represented as a '*' following the modified type.\r\n    ELEMENT_TYPE_BYREF is represented as a '@' following the modified type.\r\n    ELEMENT_TYPE_PINNED is represented as a '^' following the modified type. The C# compiler never generates this.\r\n    ELEMENT_TYPE_CMOD_REQ is represented as a '|' and the fully qualified name of the modifier class, following the modified type.The C# compiler never generates this.\r\n    ELEMENT_TYPE_CMOD_OPT is represented as a '!' and the fully qualified name of the modifier class, following the modified type.\r\n    ELEMENT_TYPE_SZARRAY is represented as \"[]\" following the element type of the array.\r\n    ELEMENT_TYPE_GENERICARRAY is represented as \"[?]\" following the element type of the array.The C# compiler never generates this.\r\n    ELEMENT_TYPE_ARRAY is represented as [lowerbound: size, lowerbound:size] where the number of commas is the rank - 1, and the lower bounds and size of each dimension, if known, are represented in decimal. If a lower bound or size is not specified, it is simply omitted. If the lower bound and size for a particular dimension are omitted, the ':' is omitted as well.For example, a 2-dimensional array with 1 as the lower bounds and unspecified sizes is [1:,1:].\r\n    ELEMENT_TYPE_FNPTR is represented as \"=FUNC:type(signature)\", where type is the return type, and signature is the arguments of the method.If there are no arguments, the parentheses are omitted. The C# compiler never generates this.\r\n    For conversion operators only (op_Implicit and op_Explicit), the return value of the method is encoded as a '~' followed by the return type.\r\n    For generic types, the name of the type will be followed by a back tick and then a number that indicates the number of generic type parameters\r\n    </summary>\r\n</member>\r\n"
            },
            {
              "Syntax": {
                "Content": "YamlHeaderRegex",
                "XmlDocumentation": "<member name=\"F:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter.YamlHeaderRegex\">\r\n    <summary>\r\n    Yaml style: \r\n    First line: start with ---, and could append whitespaces\r\n    Second line: start with method| namespace| class, could prefix whitespaces, and must append one *{space}* and one *:*\r\n    Third line: start with ---, and could append whitespaces, must contain a *\\n* EOL\r\n    </summary>\r\n</member>\r\n"
              },
              "Id": "F:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter.YamlHeaderRegex",
              "Parent": "T:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter",
              "XmlDocumentation": "<member name=\"F:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter.YamlHeaderRegex\">\r\n    <summary>\r\n    Yaml style: \r\n    First line: start with ---, and could append whitespaces\r\n    Second line: start with method| namespace| class, could prefix whitespaces, and must append one *{space}* and one *:*\r\n    Third line: start with ---, and could append whitespaces, must contain a *\\n* EOL\r\n    </summary>\r\n</member>\r\n"
            }
          ],
          "Syntax": {
            "Content": "public class CommentIdToYamlHeaderConverter",
            "XmlDocumentation": "<member name=\"T:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter\">\r\n    <summary>\r\n    <see cref=\"T:System.String\"/>\r\n    <see cref=\"!:AssemblyDocMetadata.mymethod\"/>\r\n    </summary>\r\n</member>\r\n"
          },
          "Id": "T:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter",
          "Parent": "N:DocAsCode.EntityModel",
          "XmlDocumentation": "<member name=\"T:DocAsCode.EntityModel.CommentIdToYamlHeaderConverter\">\r\n    <summary>\r\n    <see cref=\"T:System.String\"/>\r\n    <see cref=\"!:AssemblyDocMetadata.mymethod\"/>\r\n    </summary>\r\n</member>\r\n"
        },
        {
          "InheritanceHierarchy": [
            "T:System.Object",
            "T:DocAsCode.EntityModel.DocMetadata",
            "T:DocAsCode.EntityModel.MemberDocMetadata"
          ],
          "Methods": [
            {
              "MethodSyntax": {
                "Parameters": {
                  "T:DocAsCode.EntityModel.MemberType : type": ""
                },
                "Returns": {
                  "T:System.Collections.Generic.IEnumerable{DocAsCode.EntityModel.DocMetadata}": ""
                },
                "Content": "public IEnumerable<DocMetadata> GetMemberType(MemberType type)",
                "XmlDocumentation": ""
              },
              "Syntax": {
                "Parameters": {
                  "T:DocAsCode.EntityModel.MemberType : type": ""
                },
                "Returns": {
                  "T:System.Collections.Generic.IEnumerable{DocAsCode.EntityModel.DocMetadata}": ""
                },
                "Content": "public IEnumerable<DocMetadata> GetMemberType(MemberType type)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.CompositeDocMetadata.GetMemberType(DocAsCode.EntityModel.MemberType)",
              "Parent": "T:DocAsCode.EntityModel.CompositeDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "MethodSyntax": {
                "Parameters": {
                  "T:DocAsCode.EntityModel.MemberType : type": ""
                },
                "Returns": {
                  "T:System.Collections.Generic.IEnumerable{``0}": ""
                },
                "Content": "protected IEnumerable<T> GetMetadata<T>(MemberType type)where T : DocMetadata",
                "XmlDocumentation": ""
              },
              "Syntax": {
                "Parameters": {
                  "T:DocAsCode.EntityModel.MemberType : type": ""
                },
                "Returns": {
                  "T:System.Collections.Generic.IEnumerable{``0}": ""
                },
                "Content": "protected IEnumerable<T> GetMetadata<T>(MemberType type)where T : DocMetadata",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.CompositeDocMetadata.GetMetadata``1(DocAsCode.EntityModel.MemberType)",
              "Parent": "T:DocAsCode.EntityModel.CompositeDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "MethodSyntax": {
                "Parameters": {},
                "Returns": {
                  "T:System.Void": ""
                },
                "Content": "protected void Init()",
                "XmlDocumentation": ""
              },
              "Syntax": {
                "Parameters": {},
                "Returns": {
                  "T:System.Void": ""
                },
                "Content": "protected void Init()",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.CompositeDocMetadata.Init",
              "Parent": "T:DocAsCode.EntityModel.CompositeDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "MethodSyntax": {
                "Parameters": {
                  "T:DocAsCode.EntityModel.MemberType : type": "",
                  "T:System.Collections.Generic.IEnumerable{``0} : value": ""
                },
                "Returns": {
                  "T:System.Void": ""
                },
                "Content": "protected void SetMetadata<T>(MemberType type, IEnumerable<T> value)where T : DocMetadata",
                "XmlDocumentation": ""
              },
              "Syntax": {
                "Parameters": {
                  "T:DocAsCode.EntityModel.MemberType : type": "",
                  "T:System.Collections.Generic.IEnumerable{``0} : value": ""
                },
                "Returns": {
                  "T:System.Void": ""
                },
                "Content": "protected void SetMetadata<T>(MemberType type, IEnumerable<T> value)where T : DocMetadata",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.CompositeDocMetadata.SetMetadata``1(DocAsCode.EntityModel.MemberType,System.Collections.Generic.IEnumerable{``0})",
              "Parent": "T:DocAsCode.EntityModel.CompositeDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "MethodSyntax": {
                "Parameters": {
                  "T:DocAsCode.EntityModel.MemberDocMetadata : metadata": "",
                  "T:DocAsCode.EntityModel.MemberType : type": ""
                },
                "Returns": {
                  "T:System.Boolean": ""
                },
                "Content": "public bool TryAdd(MemberDocMetadata metadata, MemberType type)",
                "XmlDocumentation": ""
              },
              "Syntax": {
                "Parameters": {
                  "T:DocAsCode.EntityModel.MemberDocMetadata : metadata": "",
                  "T:DocAsCode.EntityModel.MemberType : type": ""
                },
                "Returns": {
                  "T:System.Boolean": ""
                },
                "Content": "public bool TryAdd(MemberDocMetadata metadata, MemberType type)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.CompositeDocMetadata.TryAdd(DocAsCode.EntityModel.MemberDocMetadata,DocAsCode.EntityModel.MemberType)",
              "Parent": "T:DocAsCode.EntityModel.CompositeDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "MethodSyntax": {
                "Parameters": {
                  "T:System.IO.TextWriter : writer": ""
                },
                "Returns": {
                  "T:System.Void": ""
                },
                "Content": "public override void WriteMarkdownSkeleton(TextWriter writer)",
                "XmlDocumentation": ""
              },
              "Syntax": {
                "Parameters": {
                  "T:System.IO.TextWriter : writer": ""
                },
                "Returns": {
                  "T:System.Void": ""
                },
                "Content": "public override void WriteMarkdownSkeleton(TextWriter writer)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.CompositeDocMetadata.WriteMarkdownSkeleton(System.IO.TextWriter)",
              "Parent": "T:DocAsCode.EntityModel.CompositeDocMetadata",
              "XmlDocumentation": ""
            }
          ],
          "Fields": [
            {
              "Syntax": {
                "Content": "_members",
                "XmlDocumentation": ""
              },
              "Id": "F:DocAsCode.EntityModel.CompositeDocMetadata._members",
              "Parent": "T:DocAsCode.EntityModel.CompositeDocMetadata",
              "XmlDocumentation": ""
            }
          ],
          "Properties": [
            {
              "Syntax": {
                "Content": "protected List<MemberType> AllowedMemberTypes",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.CompositeDocMetadata.AllowedMemberTypes",
              "Parent": "T:DocAsCode.EntityModel.CompositeDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public Dictionary<MemberType, ConcurrentDictionary<Identity, DocMetadata>> MemberDict",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.CompositeDocMetadata.MemberDict",
              "Parent": "T:DocAsCode.EntityModel.CompositeDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public IEnumerable<DocMetadata> Members",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.CompositeDocMetadata.Members",
              "Parent": "T:DocAsCode.EntityModel.CompositeDocMetadata",
              "XmlDocumentation": ""
            }
          ],
          "Constructors": [
            {
              "Syntax": {
                "Content": "public CompositeDocMetadata()",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.CompositeDocMetadata.#ctor",
              "Parent": "T:DocAsCode.EntityModel.CompositeDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public CompositeDocMetadata(DocMetadata mta): base (mta)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.CompositeDocMetadata.#ctor(DocAsCode.EntityModel.DocMetadata)",
              "Parent": "T:DocAsCode.EntityModel.CompositeDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public CompositeDocMetadata(string name): base (name)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.CompositeDocMetadata.#ctor(System.String)",
              "Parent": "T:DocAsCode.EntityModel.CompositeDocMetadata",
              "XmlDocumentation": ""
            }
          ],
          "Syntax": {
            "Content": "public class CompositeDocMetadata",
            "XmlDocumentation": ""
          },
          "Id": "T:DocAsCode.EntityModel.CompositeDocMetadata",
          "Parent": "N:DocAsCode.EntityModel",
          "XmlDocumentation": ""
        },
        {
          "InheritanceHierarchy": [
            "T:System.Object",
            "T:DocAsCode.EntityModel.DocMetadata",
            "T:DocAsCode.EntityModel.MemberDocMetadata"
          ],
          "Constructors": [
            {
              "Syntax": {
                "Content": "public ConstructorDocMetadata()",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.ConstructorDocMetadata.#ctor",
              "Parent": "T:DocAsCode.EntityModel.ConstructorDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public ConstructorDocMetadata(DocMetadata mta): base (mta)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.ConstructorDocMetadata.#ctor(DocAsCode.EntityModel.DocMetadata)",
              "Parent": "T:DocAsCode.EntityModel.ConstructorDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public ConstructorDocMetadata(string name): base (name)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.ConstructorDocMetadata.#ctor(System.String)",
              "Parent": "T:DocAsCode.EntityModel.ConstructorDocMetadata",
              "XmlDocumentation": ""
            }
          ],
          "Syntax": {
            "Content": "public class ConstructorDocMetadata",
            "XmlDocumentation": ""
          },
          "Id": "T:DocAsCode.EntityModel.ConstructorDocMetadata",
          "Parent": "N:DocAsCode.EntityModel",
          "XmlDocumentation": ""
        },
        {
          "InheritanceHierarchy": [
            "T:System.Object",
            "T:DocAsCode.EntityModel.SyntaxDocFragment"
          ],
          "Properties": [
            {
              "Syntax": {
                "Content": "public IReadOnlyDictionary<Identity, string> Parameters",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.ConstructorSyntax.Parameters",
              "Parent": "T:DocAsCode.EntityModel.ConstructorSyntax",
              "XmlDocumentation": ""
            }
          ],
          "Syntax": {
            "Content": "public class ConstructorSyntax",
            "XmlDocumentation": "<member name=\"T:DocAsCode.EntityModel.ConstructorSyntax\">\r\n    <summary>\r\n    http://msdn.microsoft.com/zh-cn/library/tz6bzkbf(v=vs.110).aspx\r\n    </summary>\r\n</member>\r\n"
          },
          "Id": "T:DocAsCode.EntityModel.ConstructorSyntax",
          "Parent": "N:DocAsCode.EntityModel",
          "XmlDocumentation": "<member name=\"T:DocAsCode.EntityModel.ConstructorSyntax\">\r\n    <summary>\r\n    http://msdn.microsoft.com/zh-cn/library/tz6bzkbf(v=vs.110).aspx\r\n    </summary>\r\n</member>\r\n"
        },
        {
          "InheritanceHierarchy": [
            "T:System.Object",
            "T:DocAsCode.EntityModel.DocMetadata",
            "T:DocAsCode.EntityModel.MemberDocMetadata"
          ],
          "Constructors": [
            {
              "Syntax": {
                "Content": "public DelegateDocMetadata()",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.DelegateDocMetadata.#ctor",
              "Parent": "T:DocAsCode.EntityModel.DelegateDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public DelegateDocMetadata(DocMetadata mta): base (mta)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.DelegateDocMetadata.#ctor(DocAsCode.EntityModel.DocMetadata)",
              "Parent": "T:DocAsCode.EntityModel.DelegateDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public DelegateDocMetadata(string name): base (name)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.DelegateDocMetadata.#ctor(System.String)",
              "Parent": "T:DocAsCode.EntityModel.DelegateDocMetadata",
              "XmlDocumentation": ""
            }
          ],
          "Syntax": {
            "Content": "public class DelegateDocMetadata",
            "XmlDocumentation": ""
          },
          "Id": "T:DocAsCode.EntityModel.DelegateDocMetadata",
          "Parent": "N:DocAsCode.EntityModel",
          "XmlDocumentation": ""
        },
        {
          "InheritanceHierarchy": [
            "T:System.Object"
          ],
          "Methods": [
            {
              "MethodSyntax": {
                "Parameters": {
                  "T:System.IO.TextWriter : writer": "",
                  "T:System.String : additionalContent": ""
                },
                "Returns": {
                  "T:System.Void": ""
                },
                "Content": "public virtual void WriteHtml(TextWriter writer, string additionalContent)",
                "XmlDocumentation": "<member name=\"M:DocAsCode.EntityModel.DocMetadata.WriteHtml(System.IO.TextWriter,System.String)\">\r\n    <summary>\r\n    TODO: use razor engine to generate html\r\n    </summary>\r\n    <param name=\"writer\"></param>\r\n    <param name=\"additionalContent\"></param>\r\n</member>\r\n"
              },
              "Syntax": {
                "Parameters": {
                  "T:System.IO.TextWriter : writer": "",
                  "T:System.String : additionalContent": ""
                },
                "Returns": {
                  "T:System.Void": ""
                },
                "Content": "public virtual void WriteHtml(TextWriter writer, string additionalContent)",
                "XmlDocumentation": "<member name=\"M:DocAsCode.EntityModel.DocMetadata.WriteHtml(System.IO.TextWriter,System.String)\">\r\n    <summary>\r\n    TODO: use razor engine to generate html\r\n    </summary>\r\n    <param name=\"writer\"></param>\r\n    <param name=\"additionalContent\"></param>\r\n</member>\r\n"
              },
              "Id": "M:DocAsCode.EntityModel.DocMetadata.WriteHtml(System.IO.TextWriter,System.String)",
              "Parent": "T:DocAsCode.EntityModel.DocMetadata",
              "XmlDocumentation": "<member name=\"M:DocAsCode.EntityModel.DocMetadata.WriteHtml(System.IO.TextWriter,System.String)\">\r\n    <summary>\r\n    TODO: use razor engine to generate html\r\n    </summary>\r\n    <param name=\"writer\"></param>\r\n    <param name=\"additionalContent\"></param>\r\n</member>\r\n"
            },
            {
              "MethodSyntax": {
                "Parameters": {
                  "T:System.IO.TextWriter : writer": ""
                },
                "Returns": {
                  "T:System.Void": ""
                },
                "Content": "public virtual void WriteMarkdownSkeleton(TextWriter writer)",
                "XmlDocumentation": "<member name=\"M:DocAsCode.EntityModel.DocMetadata.WriteMarkdownSkeleton(System.IO.TextWriter)\">\r\n    <summary>\r\n    Export Markdown file\r\n    ---\r\n    M:SDSearchLib.Managers.ConsoleManager.ShowWindow(System.Boolean)\r\n    ---\r\n    </summary>\r\n    <param name=\"stream\"></param>\r\n</member>\r\n"
              },
              "Syntax": {
                "Parameters": {
                  "T:System.IO.TextWriter : writer": ""
                },
                "Returns": {
                  "T:System.Void": ""
                },
                "Content": "public virtual void WriteMarkdownSkeleton(TextWriter writer)",
                "XmlDocumentation": "<member name=\"M:DocAsCode.EntityModel.DocMetadata.WriteMarkdownSkeleton(System.IO.TextWriter)\">\r\n    <summary>\r\n    Export Markdown file\r\n    ---\r\n    M:SDSearchLib.Managers.ConsoleManager.ShowWindow(System.Boolean)\r\n    ---\r\n    </summary>\r\n    <param name=\"stream\"></param>\r\n</member>\r\n"
              },
              "Id": "M:DocAsCode.EntityModel.DocMetadata.WriteMarkdownSkeleton(System.IO.TextWriter)",
              "Parent": "T:DocAsCode.EntityModel.DocMetadata",
              "XmlDocumentation": "<member name=\"M:DocAsCode.EntityModel.DocMetadata.WriteMarkdownSkeleton(System.IO.TextWriter)\">\r\n    <summary>\r\n    Export Markdown file\r\n    ---\r\n    M:SDSearchLib.Managers.ConsoleManager.ShowWindow(System.Boolean)\r\n    ---\r\n    </summary>\r\n    <param name=\"stream\"></param>\r\n</member>\r\n"
            }
          ],
          "Properties": [
            {
              "Syntax": {
                "Content": "public Identity Id",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.DocMetadata.Id",
              "Parent": "T:DocAsCode.EntityModel.DocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public string MarkdownContent",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.DocMetadata.MarkdownContent",
              "Parent": "T:DocAsCode.EntityModel.DocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public MemberType MemberType",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.DocMetadata.MemberType",
              "Parent": "T:DocAsCode.EntityModel.DocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public Version MscorlibVersion",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.DocMetadata.MscorlibVersion",
              "Parent": "T:DocAsCode.EntityModel.DocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public Identity Parent",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.DocMetadata.Parent",
              "Parent": "T:DocAsCode.EntityModel.DocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public string XmlDocumentation",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.DocMetadata.XmlDocumentation",
              "Parent": "T:DocAsCode.EntityModel.DocMetadata",
              "XmlDocumentation": ""
            }
          ],
          "Constructors": [
            {
              "Syntax": {
                "Content": "public DocMetadata()",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.DocMetadata.#ctor",
              "Parent": "T:DocAsCode.EntityModel.DocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public DocMetadata(string name)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.DocMetadata.#ctor(System.String)",
              "Parent": "T:DocAsCode.EntityModel.DocMetadata",
              "XmlDocumentation": ""
            }
          ],
          "Syntax": {
            "Content": "public class DocMetadata",
            "XmlDocumentation": ""
          },
          "Id": "T:DocAsCode.EntityModel.DocMetadata",
          "Parent": "N:DocAsCode.EntityModel",
          "XmlDocumentation": ""
        },
        {
          "InheritanceHierarchy": [
            "T:System.Object",
            "T:DocAsCode.EntityModel.DocMetadata",
            "T:DocAsCode.EntityModel.MemberDocMetadata"
          ],
          "Constructors": [
            {
              "Syntax": {
                "Content": "public EnumDocMetadata()",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.EnumDocMetadata.#ctor",
              "Parent": "T:DocAsCode.EntityModel.EnumDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public EnumDocMetadata(DocMetadata mta): base (mta)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.EnumDocMetadata.#ctor(DocAsCode.EntityModel.DocMetadata)",
              "Parent": "T:DocAsCode.EntityModel.EnumDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public EnumDocMetadata(string name): base (name)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.EnumDocMetadata.#ctor(System.String)",
              "Parent": "T:DocAsCode.EntityModel.EnumDocMetadata",
              "XmlDocumentation": ""
            }
          ],
          "Syntax": {
            "Content": "public class EnumDocMetadata",
            "XmlDocumentation": ""
          },
          "Id": "T:DocAsCode.EntityModel.EnumDocMetadata",
          "Parent": "N:DocAsCode.EntityModel",
          "XmlDocumentation": ""
        },
        {
          "InheritanceHierarchy": [
            "T:System.Object",
            "T:DocAsCode.EntityModel.DocMetadata",
            "T:DocAsCode.EntityModel.MemberDocMetadata"
          ],
          "Constructors": [
            {
              "Syntax": {
                "Content": "public EventDocMetadataDefinition()",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.EventDocMetadataDefinition.#ctor",
              "Parent": "T:DocAsCode.EntityModel.EventDocMetadataDefinition",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public EventDocMetadataDefinition(DocMetadata mta): base (mta)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.EventDocMetadataDefinition.#ctor(DocAsCode.EntityModel.DocMetadata)",
              "Parent": "T:DocAsCode.EntityModel.EventDocMetadataDefinition",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public EventDocMetadataDefinition(string name): base (name)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.EventDocMetadataDefinition.#ctor(System.String)",
              "Parent": "T:DocAsCode.EntityModel.EventDocMetadataDefinition",
              "XmlDocumentation": ""
            }
          ],
          "Syntax": {
            "Content": "public class EventDocMetadataDefinition",
            "XmlDocumentation": ""
          },
          "Id": "T:DocAsCode.EntityModel.EventDocMetadataDefinition",
          "Parent": "N:DocAsCode.EntityModel",
          "XmlDocumentation": ""
        },
        {
          "InheritanceHierarchy": [
            "T:System.Object",
            "T:DocAsCode.EntityModel.DocMetadata",
            "T:DocAsCode.EntityModel.MemberDocMetadata"
          ],
          "Constructors": [
            {
              "Syntax": {
                "Content": "public FieldDocMetadata()",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.FieldDocMetadata.#ctor",
              "Parent": "T:DocAsCode.EntityModel.FieldDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public FieldDocMetadata(DocMetadata mta): base (mta)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.FieldDocMetadata.#ctor(DocAsCode.EntityModel.DocMetadata)",
              "Parent": "T:DocAsCode.EntityModel.FieldDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public FieldDocMetadata(string name): base (name)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.FieldDocMetadata.#ctor(System.String)",
              "Parent": "T:DocAsCode.EntityModel.FieldDocMetadata",
              "XmlDocumentation": ""
            }
          ],
          "Syntax": {
            "Content": "public class FieldDocMetadata",
            "XmlDocumentation": ""
          },
          "Id": "T:DocAsCode.EntityModel.FieldDocMetadata",
          "Parent": "N:DocAsCode.EntityModel",
          "XmlDocumentation": ""
        },
        {
          "InheritanceHierarchy": [
            "T:System.Object"
          ],
          "Methods": [
            {
              "MethodSyntax": {
                "Parameters": {},
                "Returns": {
                  "T:System.String": ""
                },
                "Content": "public override string ToString()",
                "XmlDocumentation": ""
              },
              "Syntax": {
                "Parameters": {},
                "Returns": {
                  "T:System.String": ""
                },
                "Content": "public override string ToString()",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.Identity.ToString",
              "Parent": "T:DocAsCode.EntityModel.Identity",
              "XmlDocumentation": ""
            }
          ],
          "Constructors": [
            {
              "Syntax": {
                "Content": "public Identity(string fullyQualifiedName)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.Identity.#ctor(System.String)",
              "Parent": "T:DocAsCode.EntityModel.Identity",
              "XmlDocumentation": ""
            }
          ],
          "Syntax": {
            "Content": "public class Identity",
            "XmlDocumentation": ""
          },
          "Id": "T:DocAsCode.EntityModel.Identity",
          "Parent": "N:DocAsCode.EntityModel",
          "XmlDocumentation": ""
        },
        {
          "InheritanceHierarchy": [
            "T:System.Object",
            "T:DocAsCode.EntityModel.DocMetadata",
            "T:DocAsCode.EntityModel.MemberDocMetadata",
            "T:DocAsCode.EntityModel.CompositeDocMetadata"
          ],
          "Properties": [
            {
              "Syntax": {
                "Content": "public IEnumerable<EventDocMetadataDefinition> Events",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.InterfaceDocMetadata.Events",
              "Parent": "T:DocAsCode.EntityModel.InterfaceDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public IEnumerable<MethodDocMetadata> Methods",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.InterfaceDocMetadata.Methods",
              "Parent": "T:DocAsCode.EntityModel.InterfaceDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public IEnumerable<PropertyDocMetadata> Properties",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.InterfaceDocMetadata.Properties",
              "Parent": "T:DocAsCode.EntityModel.InterfaceDocMetadata",
              "XmlDocumentation": ""
            }
          ],
          "Constructors": [
            {
              "Syntax": {
                "Content": "public InterfaceDocMetadata()",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.InterfaceDocMetadata.#ctor",
              "Parent": "T:DocAsCode.EntityModel.InterfaceDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public InterfaceDocMetadata(DocMetadata mta): base (mta)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.InterfaceDocMetadata.#ctor(DocAsCode.EntityModel.DocMetadata)",
              "Parent": "T:DocAsCode.EntityModel.InterfaceDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public InterfaceDocMetadata(string name): base (name)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.InterfaceDocMetadata.#ctor(System.String)",
              "Parent": "T:DocAsCode.EntityModel.InterfaceDocMetadata",
              "XmlDocumentation": ""
            }
          ],
          "Syntax": {
            "Content": "public class InterfaceDocMetadata",
            "XmlDocumentation": ""
          },
          "Id": "T:DocAsCode.EntityModel.InterfaceDocMetadata",
          "Parent": "N:DocAsCode.EntityModel",
          "XmlDocumentation": ""
        },
        {
          "InheritanceHierarchy": [
            "T:System.Object",
            "T:DocAsCode.EntityModel.DocMetadata"
          ],
          "Properties": [
            {
              "Syntax": {
                "Content": "public Identity Assembly",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.MemberDocMetadata.Assembly",
              "Parent": "T:DocAsCode.EntityModel.MemberDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public Identity Namespace",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.MemberDocMetadata.Namespace",
              "Parent": "T:DocAsCode.EntityModel.MemberDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public SyntaxDocFragment Syntax",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.MemberDocMetadata.Syntax",
              "Parent": "T:DocAsCode.EntityModel.MemberDocMetadata",
              "XmlDocumentation": ""
            }
          ],
          "Constructors": [
            {
              "Syntax": {
                "Content": "public MemberDocMetadata()",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.MemberDocMetadata.#ctor",
              "Parent": "T:DocAsCode.EntityModel.MemberDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public MemberDocMetadata(DocMetadata mta): base (mta.Id)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.MemberDocMetadata.#ctor(DocAsCode.EntityModel.DocMetadata)",
              "Parent": "T:DocAsCode.EntityModel.MemberDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public MemberDocMetadata(string name): base (name)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.MemberDocMetadata.#ctor(System.String)",
              "Parent": "T:DocAsCode.EntityModel.MemberDocMetadata",
              "XmlDocumentation": ""
            }
          ],
          "Syntax": {
            "Content": "public class MemberDocMetadata",
            "XmlDocumentation": ""
          },
          "Id": "T:DocAsCode.EntityModel.MemberDocMetadata",
          "Parent": "N:DocAsCode.EntityModel",
          "XmlDocumentation": ""
        },
        {
          "InheritanceHierarchy": [
            "T:System.Object",
            "T:DocAsCode.EntityModel.DocMetadata",
            "T:DocAsCode.EntityModel.MemberDocMetadata"
          ],
          "Properties": [
            {
              "Syntax": {
                "Content": "public MethodSyntax MethodSyntax",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.MethodDocMetadata.MethodSyntax",
              "Parent": "T:DocAsCode.EntityModel.MethodDocMetadata",
              "XmlDocumentation": ""
            }
          ],
          "Constructors": [
            {
              "Syntax": {
                "Content": "public MethodDocMetadata()",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.MethodDocMetadata.#ctor",
              "Parent": "T:DocAsCode.EntityModel.MethodDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public MethodDocMetadata(DocMetadata mta): base (mta)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.MethodDocMetadata.#ctor(DocAsCode.EntityModel.DocMetadata)",
              "Parent": "T:DocAsCode.EntityModel.MethodDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public MethodDocMetadata(string name): base (name)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.MethodDocMetadata.#ctor(System.String)",
              "Parent": "T:DocAsCode.EntityModel.MethodDocMetadata",
              "XmlDocumentation": ""
            }
          ],
          "Syntax": {
            "Content": "public class MethodDocMetadata",
            "XmlDocumentation": ""
          },
          "Id": "T:DocAsCode.EntityModel.MethodDocMetadata",
          "Parent": "N:DocAsCode.EntityModel",
          "XmlDocumentation": ""
        },
        {
          "InheritanceHierarchy": [
            "T:System.Object",
            "T:DocAsCode.EntityModel.SyntaxDocFragment"
          ],
          "Properties": [
            {
              "Syntax": {
                "Content": "public IReadOnlyList<Identity> Implements",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.MethodSyntax.Implements",
              "Parent": "T:DocAsCode.EntityModel.MethodSyntax",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public SortedDictionary<string, string> Parameters",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.MethodSyntax.Parameters",
              "Parent": "T:DocAsCode.EntityModel.MethodSyntax",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public Dictionary<string, string> Returns",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.MethodSyntax.Returns",
              "Parent": "T:DocAsCode.EntityModel.MethodSyntax",
              "XmlDocumentation": ""
            }
          ],
          "Syntax": {
            "Content": "public class MethodSyntax",
            "XmlDocumentation": "<member name=\"T:DocAsCode.EntityModel.MethodSyntax\">\r\n    <summary>\r\n    http://msdn.microsoft.com/zh-cn/library/tz6bzkbf(v=vs.110).aspx\r\n    </summary>\r\n</member>\r\n"
          },
          "Id": "T:DocAsCode.EntityModel.MethodSyntax",
          "Parent": "N:DocAsCode.EntityModel",
          "XmlDocumentation": "<member name=\"T:DocAsCode.EntityModel.MethodSyntax\">\r\n    <summary>\r\n    http://msdn.microsoft.com/zh-cn/library/tz6bzkbf(v=vs.110).aspx\r\n    </summary>\r\n</member>\r\n"
        },
        {
          "InheritanceHierarchy": [
            "T:System.Object",
            "T:DocAsCode.EntityModel.DocMetadata",
            "T:DocAsCode.EntityModel.MemberDocMetadata",
            "T:DocAsCode.EntityModel.CompositeDocMetadata"
          ],
          "Properties": [
            {
              "Syntax": {
                "Content": "public IEnumerable<ClassDocMetadata> Classes",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.NamespaceDocMetadata.Classes",
              "Parent": "T:DocAsCode.EntityModel.NamespaceDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public IEnumerable<DelegateDocMetadata> Delegates",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.NamespaceDocMetadata.Delegates",
              "Parent": "T:DocAsCode.EntityModel.NamespaceDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public IEnumerable<EnumDocMetadata> Enums",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.NamespaceDocMetadata.Enums",
              "Parent": "T:DocAsCode.EntityModel.NamespaceDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public IEnumerable<InterfaceDocMetadata> Interfaces",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.NamespaceDocMetadata.Interfaces",
              "Parent": "T:DocAsCode.EntityModel.NamespaceDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public IEnumerable<StructDocMetadata> Structs",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.NamespaceDocMetadata.Structs",
              "Parent": "T:DocAsCode.EntityModel.NamespaceDocMetadata",
              "XmlDocumentation": ""
            }
          ],
          "Constructors": [
            {
              "Syntax": {
                "Content": "public NamespaceDocMetadata()",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.NamespaceDocMetadata.#ctor",
              "Parent": "T:DocAsCode.EntityModel.NamespaceDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public NamespaceDocMetadata(DocMetadata mta): base (mta)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.NamespaceDocMetadata.#ctor(DocAsCode.EntityModel.DocMetadata)",
              "Parent": "T:DocAsCode.EntityModel.NamespaceDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public NamespaceDocMetadata(string name): base (name)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.NamespaceDocMetadata.#ctor(System.String)",
              "Parent": "T:DocAsCode.EntityModel.NamespaceDocMetadata",
              "XmlDocumentation": ""
            }
          ],
          "Syntax": {
            "Content": "public class NamespaceDocMetadata",
            "XmlDocumentation": "<member name=\"T:DocAsCode.EntityModel.NamespaceDocMetadata\">\r\n    <summary>\r\n    TODO: what if no namespace?\r\n    </summary>\r\n</member>\r\n"
          },
          "Id": "T:DocAsCode.EntityModel.NamespaceDocMetadata",
          "Parent": "N:DocAsCode.EntityModel",
          "XmlDocumentation": "<member name=\"T:DocAsCode.EntityModel.NamespaceDocMetadata\">\r\n    <summary>\r\n    TODO: what if no namespace?\r\n    </summary>\r\n</member>\r\n"
        },
        {
          "InheritanceHierarchy": [
            "T:System.Object",
            "T:DocAsCode.EntityModel.DocMetadata",
            "T:DocAsCode.EntityModel.MemberDocMetadata"
          ],
          "Constructors": [
            {
              "Syntax": {
                "Content": "public PropertyDocMetadata()",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.PropertyDocMetadata.#ctor",
              "Parent": "T:DocAsCode.EntityModel.PropertyDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public PropertyDocMetadata(DocMetadata mta): base (mta)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.PropertyDocMetadata.#ctor(DocAsCode.EntityModel.DocMetadata)",
              "Parent": "T:DocAsCode.EntityModel.PropertyDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public PropertyDocMetadata(string name): base (name)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.PropertyDocMetadata.#ctor(System.String)",
              "Parent": "T:DocAsCode.EntityModel.PropertyDocMetadata",
              "XmlDocumentation": ""
            }
          ],
          "Syntax": {
            "Content": "public class PropertyDocMetadata",
            "XmlDocumentation": ""
          },
          "Id": "T:DocAsCode.EntityModel.PropertyDocMetadata",
          "Parent": "N:DocAsCode.EntityModel",
          "XmlDocumentation": ""
        },
        {
          "InheritanceHierarchy": [
            "T:System.Object",
            "T:DocAsCode.EntityModel.SyntaxDocFragment"
          ],
          "Properties": [
            {
              "Syntax": {
                "Content": "public IReadOnlyList<Identity> Implements",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.PropertySyntax.Implements",
              "Parent": "T:DocAsCode.EntityModel.PropertySyntax",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public Identity PropertyType",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.PropertySyntax.PropertyType",
              "Parent": "T:DocAsCode.EntityModel.PropertySyntax",
              "XmlDocumentation": ""
            }
          ],
          "Syntax": {
            "Content": "public class PropertySyntax",
            "XmlDocumentation": "<member name=\"T:DocAsCode.EntityModel.PropertySyntax\">\r\n    <summary>\r\n    http://msdn.microsoft.com/zh-cn/library/system.exception.helplink(v=vs.110).aspx\r\n    </summary>\r\n</member>\r\n"
          },
          "Id": "T:DocAsCode.EntityModel.PropertySyntax",
          "Parent": "N:DocAsCode.EntityModel",
          "XmlDocumentation": "<member name=\"T:DocAsCode.EntityModel.PropertySyntax\">\r\n    <summary>\r\n    http://msdn.microsoft.com/zh-cn/library/system.exception.helplink(v=vs.110).aspx\r\n    </summary>\r\n</member>\r\n"
        },
        {
          "InheritanceHierarchy": [
            "T:System.Object",
            "T:DocAsCode.EntityModel.DocMetadata",
            "T:DocAsCode.EntityModel.MemberDocMetadata",
            "T:DocAsCode.EntityModel.CompositeDocMetadata"
          ],
          "Properties": [
            {
              "Syntax": {
                "Content": "public IEnumerable<ConstructorDocMetadata> Constructors",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.StructDocMetadata.Constructors",
              "Parent": "T:DocAsCode.EntityModel.StructDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public IEnumerable<EventDocMetadataDefinition> Events",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.StructDocMetadata.Events",
              "Parent": "T:DocAsCode.EntityModel.StructDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public IEnumerable<FieldDocMetadata> Fields",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.StructDocMetadata.Fields",
              "Parent": "T:DocAsCode.EntityModel.StructDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public IEnumerable<MethodDocMetadata> Methods",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.StructDocMetadata.Methods",
              "Parent": "T:DocAsCode.EntityModel.StructDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public IEnumerable<PropertyDocMetadata> Properties",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.StructDocMetadata.Properties",
              "Parent": "T:DocAsCode.EntityModel.StructDocMetadata",
              "XmlDocumentation": ""
            }
          ],
          "Constructors": [
            {
              "Syntax": {
                "Content": "public StructDocMetadata()",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.StructDocMetadata.#ctor",
              "Parent": "T:DocAsCode.EntityModel.StructDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public StructDocMetadata(DocMetadata mta): base (mta)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.StructDocMetadata.#ctor(DocAsCode.EntityModel.DocMetadata)",
              "Parent": "T:DocAsCode.EntityModel.StructDocMetadata",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public StructDocMetadata(string name): base (name)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.EntityModel.StructDocMetadata.#ctor(System.String)",
              "Parent": "T:DocAsCode.EntityModel.StructDocMetadata",
              "XmlDocumentation": ""
            }
          ],
          "Syntax": {
            "Content": "public class StructDocMetadata",
            "XmlDocumentation": ""
          },
          "Id": "T:DocAsCode.EntityModel.StructDocMetadata",
          "Parent": "N:DocAsCode.EntityModel",
          "XmlDocumentation": ""
        },
        {
          "InheritanceHierarchy": [
            "T:System.Object"
          ],
          "Properties": [
            {
              "Syntax": {
                "Content": "public string Content",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.SyntaxDocFragment.Content",
              "Parent": "T:DocAsCode.EntityModel.SyntaxDocFragment",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public string Language",
                "XmlDocumentation": "<member name=\"P:DocAsCode.EntityModel.SyntaxDocFragment.Language\">\r\n    <summary>\r\n    TODO: how to merge comments in different language\r\n    </summary>\r\n</member>\r\n"
              },
              "Id": "P:DocAsCode.EntityModel.SyntaxDocFragment.Language",
              "Parent": "T:DocAsCode.EntityModel.SyntaxDocFragment",
              "XmlDocumentation": "<member name=\"P:DocAsCode.EntityModel.SyntaxDocFragment.Language\">\r\n    <summary>\r\n    TODO: how to merge comments in different language\r\n    </summary>\r\n</member>\r\n"
            },
            {
              "Syntax": {
                "Content": "public string XmlDocumentation",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.EntityModel.SyntaxDocFragment.XmlDocumentation",
              "Parent": "T:DocAsCode.EntityModel.SyntaxDocFragment",
              "XmlDocumentation": ""
            }
          ],
          "Syntax": {
            "Content": "public class SyntaxDocFragment",
            "XmlDocumentation": ""
          },
          "Id": "T:DocAsCode.EntityModel.SyntaxDocFragment",
          "Parent": "N:DocAsCode.EntityModel",
          "XmlDocumentation": ""
        }
      ],
      "Enums": [
        {
          "Syntax": {
            "Content": "public enum MemberType",
            "XmlDocumentation": ""
          },
          "Id": "T:DocAsCode.EntityModel.MemberType",
          "Parent": "N:DocAsCode.EntityModel",
          "XmlDocumentation": ""
        }
      ],
      "Id": "N:DocAsCode.EntityModel",
      "Parent": "EntityModel",
      "XmlDocumentation": ""
    }
  ],
  "Id": "EntityModel",
  "MscorlibVersion": {
    "Major": 4
  }
}