{
  "Namespaces": [
    {
      "Classes": [
        {
          "InheritanceHierarchy": [
            "T:System.Object"
          ],
          "Methods": [
            {
              "MethodSyntax": {
                "Parameters": {
                  "T:System.Array : args": "",
                  "T:System.Collections.Generic.IEnumerable{DocAsCode.Utility.Option} : options": ""
                },
                "Returns": {
                  "T:System.Boolean": ""
                },
                "Content": "public static bool ParseParameters(IEnumerable<Option> options, string[] args)",
                "XmlDocumentation": "<member name=\"M:DocAsCode.Utility.ConsoleParameterParser.ParseParameters(System.Collections.Generic.IEnumerable{DocAsCode.Utility.Option},System.String[])\">\r\n    <summary>\r\n    Parse the console parameters\r\n    </summary>\r\n    <param name=\"options\"></param>\r\n    <param name=\"args\"></param>\r\n    <returns></returns>\r\n</member>\r\n"
              },
              "Syntax": {
                "Parameters": {
                  "T:System.Array : args": "",
                  "T:System.Collections.Generic.IEnumerable{DocAsCode.Utility.Option} : options": ""
                },
                "Returns": {
                  "T:System.Boolean": ""
                },
                "Content": "public static bool ParseParameters(IEnumerable<Option> options, string[] args)",
                "XmlDocumentation": "<member name=\"M:DocAsCode.Utility.ConsoleParameterParser.ParseParameters(System.Collections.Generic.IEnumerable{DocAsCode.Utility.Option},System.String[])\">\r\n    <summary>\r\n    Parse the console parameters\r\n    </summary>\r\n    <param name=\"options\"></param>\r\n    <param name=\"args\"></param>\r\n    <returns></returns>\r\n</member>\r\n"
              },
              "Id": "M:DocAsCode.Utility.ConsoleParameterParser.ParseParameters(System.Collections.Generic.IEnumerable{DocAsCode.Utility.Option},System.String[])",
              "Parent": "T:DocAsCode.Utility.ConsoleParameterParser",
              "XmlDocumentation": "<member name=\"M:DocAsCode.Utility.ConsoleParameterParser.ParseParameters(System.Collections.Generic.IEnumerable{DocAsCode.Utility.Option},System.String[])\">\r\n    <summary>\r\n    Parse the console parameters\r\n    </summary>\r\n    <param name=\"options\"></param>\r\n    <param name=\"args\"></param>\r\n    <returns></returns>\r\n</member>\r\n"
            }
          ],
          "Syntax": {
            "Content": "public class ConsoleParameterParser",
            "XmlDocumentation": "<member name=\"T:DocAsCode.Utility.ConsoleParameterParser\">\r\n    <summary>\r\n    The console parameter parser\r\n    </summary>\r\n</member>\r\n"
          },
          "Id": "T:DocAsCode.Utility.ConsoleParameterParser",
          "Parent": "N:DocAsCode.Utility",
          "XmlDocumentation": "<member name=\"T:DocAsCode.Utility.ConsoleParameterParser\">\r\n    <summary>\r\n    The console parameter parser\r\n    </summary>\r\n</member>\r\n"
        },
        {
          "InheritanceHierarchy": [
            "T:System.Object",
            "T:System.ComponentModel.TypeConverter"
          ],
          "Methods": [
            {
              "MethodSyntax": {
                "Parameters": {
                  "T:System.ComponentModel.ITypeDescriptorContext : context": "",
                  "T:System.Type : sourceType": ""
                },
                "Returns": {
                  "T:System.Boolean": ""
                },
                "Content": "public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)",
                "XmlDocumentation": "<member name=\"M:DocAsCode.Utility.DelimitedStringArrayConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\">\r\n    <summary>\r\n    Specifies if the current type can be converted from\r\n    </summary>\r\n    <param name=\"context\"></param>\r\n    <param name=\"sourceType\"></param>\r\n    <returns></returns>\r\n</member>\r\n"
              },
              "Syntax": {
                "Parameters": {
                  "T:System.ComponentModel.ITypeDescriptorContext : context": "",
                  "T:System.Type : sourceType": ""
                },
                "Returns": {
                  "T:System.Boolean": ""
                },
                "Content": "public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)",
                "XmlDocumentation": "<member name=\"M:DocAsCode.Utility.DelimitedStringArrayConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\">\r\n    <summary>\r\n    Specifies if the current type can be converted from\r\n    </summary>\r\n    <param name=\"context\"></param>\r\n    <param name=\"sourceType\"></param>\r\n    <returns></returns>\r\n</member>\r\n"
              },
              "Id": "M:DocAsCode.Utility.DelimitedStringArrayConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)",
              "Parent": "T:DocAsCode.Utility.DelimitedStringArrayConverter",
              "XmlDocumentation": "<member name=\"M:DocAsCode.Utility.DelimitedStringArrayConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\">\r\n    <summary>\r\n    Specifies if the current type can be converted from\r\n    </summary>\r\n    <param name=\"context\"></param>\r\n    <param name=\"sourceType\"></param>\r\n    <returns></returns>\r\n</member>\r\n"
            },
            {
              "MethodSyntax": {
                "Parameters": {
                  "T:System.ComponentModel.ITypeDescriptorContext : context": "",
                  "T:System.Type : destinationType": ""
                },
                "Returns": {
                  "T:System.Boolean": ""
                },
                "Content": "public override bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)",
                "XmlDocumentation": ""
              },
              "Syntax": {
                "Parameters": {
                  "T:System.ComponentModel.ITypeDescriptorContext : context": "",
                  "T:System.Type : destinationType": ""
                },
                "Returns": {
                  "T:System.Boolean": ""
                },
                "Content": "public override bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.Utility.DelimitedStringArrayConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)",
              "Parent": "T:DocAsCode.Utility.DelimitedStringArrayConverter",
              "XmlDocumentation": ""
            },
            {
              "MethodSyntax": {
                "Parameters": {
                  "T:System.ComponentModel.ITypeDescriptorContext : context": "",
                  "T:System.Globalization.CultureInfo : culture": "",
                  "T:System.Object : value": ""
                },
                "Returns": {
                  "T:System.Object": ""
                },
                "Content": "public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)",
                "XmlDocumentation": ""
              },
              "Syntax": {
                "Parameters": {
                  "T:System.ComponentModel.ITypeDescriptorContext : context": "",
                  "T:System.Globalization.CultureInfo : culture": "",
                  "T:System.Object : value": ""
                },
                "Returns": {
                  "T:System.Object": ""
                },
                "Content": "public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.Utility.DelimitedStringArrayConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)",
              "Parent": "T:DocAsCode.Utility.DelimitedStringArrayConverter",
              "XmlDocumentation": ""
            },
            {
              "MethodSyntax": {
                "Parameters": {
                  "T:System.ComponentModel.ITypeDescriptorContext : context": "",
                  "T:System.Globalization.CultureInfo : culture": "",
                  "T:System.Object : value": "",
                  "T:System.Type : destinationType": ""
                },
                "Returns": {
                  "T:System.Object": ""
                },
                "Content": "public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)",
                "XmlDocumentation": ""
              },
              "Syntax": {
                "Parameters": {
                  "T:System.ComponentModel.ITypeDescriptorContext : context": "",
                  "T:System.Globalization.CultureInfo : culture": "",
                  "T:System.Object : value": "",
                  "T:System.Type : destinationType": ""
                },
                "Returns": {
                  "T:System.Object": ""
                },
                "Content": "public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.Utility.DelimitedStringArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)",
              "Parent": "T:DocAsCode.Utility.DelimitedStringArrayConverter",
              "XmlDocumentation": ""
            }
          ],
          "Syntax": {
            "Content": "public class DelimitedStringArrayConverter",
            "XmlDocumentation": "<member name=\"T:DocAsCode.Utility.DelimitedStringArrayConverter\">\r\n    <summary>\r\n    The converter to transform strings delimited by comma into string arrays\r\n    </summary>\r\n</member>\r\n"
          },
          "Id": "T:DocAsCode.Utility.DelimitedStringArrayConverter",
          "Parent": "N:DocAsCode.Utility",
          "XmlDocumentation": "<member name=\"T:DocAsCode.Utility.DelimitedStringArrayConverter\">\r\n    <summary>\r\n    The converter to transform strings delimited by comma into string arrays\r\n    </summary>\r\n</member>\r\n"
        },
        {
          "InheritanceHierarchy": [
            "T:System.Object"
          ],
          "Methods": [
            {
              "MethodSyntax": {
                "Parameters": {
                  "T:System.IO.TextReader : reader": ""
                },
                "Returns": {
                  "!:T": ""
                },
                "Content": "public static T LoadMetadata<T>(TextReader reader)where T : DocMetadata",
                "XmlDocumentation": ""
              },
              "Syntax": {
                "Parameters": {
                  "T:System.IO.TextReader : reader": ""
                },
                "Returns": {
                  "!:T": ""
                },
                "Content": "public static T LoadMetadata<T>(TextReader reader)where T : DocMetadata",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.Utility.DocMetadataExtensions.LoadMetadata``1(System.IO.TextReader)",
              "Parent": "T:DocAsCode.Utility.DocMetadataExtensions",
              "XmlDocumentation": ""
            },
            {
              "MethodSyntax": {
                "Parameters": {},
                "Returns": {
                  "T:System.Void": ""
                },
                "Content": "public static void WriteHtml()",
                "XmlDocumentation": ""
              },
              "Syntax": {
                "Parameters": {},
                "Returns": {
                  "T:System.Void": ""
                },
                "Content": "public static void WriteHtml()",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.Utility.DocMetadataExtensions.WriteHtml",
              "Parent": "T:DocAsCode.Utility.DocMetadataExtensions",
              "XmlDocumentation": ""
            },
            {
              "MethodSyntax": {
                "Parameters": {
                  "T:DocAsCode.EntityModel.DocMetadata : metadata": "",
                  "T:System.IO.TextWriter : writer": ""
                },
                "Returns": {
                  "T:System.Void": ""
                },
                "Content": "public static void WriteMetadata(this DocMetadata metadata, TextWriter writer)",
                "XmlDocumentation": ""
              },
              "Syntax": {
                "Parameters": {
                  "T:DocAsCode.EntityModel.DocMetadata : metadata": "",
                  "T:System.IO.TextWriter : writer": ""
                },
                "Returns": {
                  "T:System.Void": ""
                },
                "Content": "public static void WriteMetadata(this DocMetadata metadata, TextWriter writer)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.Utility.DocMetadataExtensions.WriteMetadata(DocAsCode.EntityModel.DocMetadata,System.IO.TextWriter)",
              "Parent": "T:DocAsCode.Utility.DocMetadataExtensions",
              "XmlDocumentation": ""
            }
          ],
          "Syntax": {
            "Content": "public static class DocMetadataExtensions",
            "XmlDocumentation": ""
          },
          "Id": "T:DocAsCode.Utility.DocMetadataExtensions",
          "Parent": "N:DocAsCode.Utility",
          "XmlDocumentation": ""
        },
        {
          "InheritanceHierarchy": [
            "T:System.Object"
          ],
          "Methods": [
            {
              "MethodSyntax": {
                "Parameters": {
                  "T:System.String : input": ""
                },
                "Returns": {
                  "T:System.String": ""
                },
                "Content": "public static string ToValidFilePath(this string input)",
                "XmlDocumentation": ""
              },
              "Syntax": {
                "Parameters": {
                  "T:System.String : input": ""
                },
                "Returns": {
                  "T:System.String": ""
                },
                "Content": "public static string ToValidFilePath(this string input)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.Utility.FileExtensions.ToValidFilePath(System.String)",
              "Parent": "T:DocAsCode.Utility.FileExtensions",
              "XmlDocumentation": ""
            }
          ],
          "Syntax": {
            "Content": "public static class FileExtensions",
            "XmlDocumentation": "<member name=\"T:DocAsCode.Utility.FileExtensions\">\r\n    <summary>\r\n    \r\n    </summary>\r\n</member>\r\n"
          },
          "Id": "T:DocAsCode.Utility.FileExtensions",
          "Parent": "N:DocAsCode.Utility",
          "XmlDocumentation": "<member name=\"T:DocAsCode.Utility.FileExtensions\">\r\n    <summary>\r\n    \r\n    </summary>\r\n</member>\r\n"
        },
        {
          "InheritanceHierarchy": [
            "T:System.Object"
          ],
          "Properties": [
            {
              "Syntax": {
                "Content": "public string DefaultValue",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.Utility.Option.DefaultValue",
              "Parent": "T:DocAsCode.Utility.Option",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public string HelpName",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.Utility.Option.HelpName",
              "Parent": "T:DocAsCode.Utility.Option",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public string HelpText",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.Utility.Option.HelpText",
              "Parent": "T:DocAsCode.Utility.Option",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public string Name",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.Utility.Option.Name",
              "Parent": "T:DocAsCode.Utility.Option",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public bool Required",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.Utility.Option.Required",
              "Parent": "T:DocAsCode.Utility.Option",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public Action<string> Setter",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.Utility.Option.Setter",
              "Parent": "T:DocAsCode.Utility.Option",
              "XmlDocumentation": ""
            }
          ],
          "Constructors": [
            {
              "Syntax": {
                "Content": "public Option(string name, Action<string> setter, string helpName = null, bool required = false, string defaultValue = null, string helpText = null)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.Utility.Option.#ctor(System.String,System.Action{System.String},System.String,System.Boolean,System.String,System.String)",
              "Parent": "T:DocAsCode.Utility.Option",
              "XmlDocumentation": ""
            }
          ],
          "Syntax": {
            "Content": "public class Option",
            "XmlDocumentation": "<member name=\"T:DocAsCode.Utility.Option\">\r\n    <summary>\r\n    The console parameters\r\n    </summary>\r\n</member>\r\n"
          },
          "Id": "T:DocAsCode.Utility.Option",
          "Parent": "N:DocAsCode.Utility",
          "XmlDocumentation": "<member name=\"T:DocAsCode.Utility.Option\">\r\n    <summary>\r\n    The console parameters\r\n    </summary>\r\n</member>\r\n"
        },
        {
          "InheritanceHierarchy": [
            "T:System.Object"
          ],
          "Properties": [
            {
              "Syntax": {
                "Content": "public string Arguments",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.Utility.ProcessDetail.Arguments",
              "Parent": "T:DocAsCode.Utility.ProcessDetail",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public string ExecutorPath",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.Utility.ProcessDetail.ExecutorPath",
              "Parent": "T:DocAsCode.Utility.ProcessDetail",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public int ExitCode",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.Utility.ProcessDetail.ExitCode",
              "Parent": "T:DocAsCode.Utility.ProcessDetail",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public int ProcessId",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.Utility.ProcessDetail.ProcessId",
              "Parent": "T:DocAsCode.Utility.ProcessDetail",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public string StandardError",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.Utility.ProcessDetail.StandardError",
              "Parent": "T:DocAsCode.Utility.ProcessDetail",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public string StandardOutput",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.Utility.ProcessDetail.StandardOutput",
              "Parent": "T:DocAsCode.Utility.ProcessDetail",
              "XmlDocumentation": ""
            },
            {
              "Syntax": {
                "Content": "public string WorkingDirectory",
                "XmlDocumentation": ""
              },
              "Id": "P:DocAsCode.Utility.ProcessDetail.WorkingDirectory",
              "Parent": "T:DocAsCode.Utility.ProcessDetail",
              "XmlDocumentation": ""
            }
          ],
          "Syntax": {
            "Content": "public class ProcessDetail\r\n\r\n/* public override string ToString()\r\n        \r\n            return new JsonSerializer().\r\n        */",
            "XmlDocumentation": ""
          },
          "Id": "T:DocAsCode.Utility.ProcessDetail",
          "Parent": "N:DocAsCode.Utility",
          "XmlDocumentation": ""
        },
        {
          "InheritanceHierarchy": [
            "T:System.Object"
          ],
          "Methods": [
            {
              "MethodSyntax": {
                "Parameters": {
                  "T:System.Int32 : timeoutInMilliseconds": "",
                  "T:System.String : arguments": "",
                  "T:System.String : executorPath": "",
                  "T:System.String : workingDirectory": ""
                },
                "Returns": {
                  "T:System.Threading.Tasks.Task{DocAsCode.Utility.ProcessDetail}": ""
                },
                "Content": "public static async Task<ProcessDetail> ExecuteWin32ProcessAsync(string executorPath, string arguments, string workingDirectory, int timeoutInMilliseconds)",
                "XmlDocumentation": ""
              },
              "Syntax": {
                "Parameters": {
                  "T:System.Int32 : timeoutInMilliseconds": "",
                  "T:System.String : arguments": "",
                  "T:System.String : executorPath": "",
                  "T:System.String : workingDirectory": ""
                },
                "Returns": {
                  "T:System.Threading.Tasks.Task{DocAsCode.Utility.ProcessDetail}": ""
                },
                "Content": "public static async Task<ProcessDetail> ExecuteWin32ProcessAsync(string executorPath, string arguments, string workingDirectory, int timeoutInMilliseconds)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.Utility.ProcessUtility.ExecuteWin32ProcessAsync(System.String,System.String,System.String,System.Int32)",
              "Parent": "T:DocAsCode.Utility.ProcessUtility",
              "XmlDocumentation": ""
            },
            {
              "MethodSyntax": {
                "Parameters": {
                  "T:System.Diagnostics.Process : process": "",
                  "T:System.Int32 : timeoutInMilliseconds": ""
                },
                "Returns": {
                  "T:System.Threading.Tasks.Task": ""
                },
                "Content": "public static Task WaitForExitAsync(this Process process, int timeoutInMilliseconds)",
                "XmlDocumentation": ""
              },
              "Syntax": {
                "Parameters": {
                  "T:System.Diagnostics.Process : process": "",
                  "T:System.Int32 : timeoutInMilliseconds": ""
                },
                "Returns": {
                  "T:System.Threading.Tasks.Task": ""
                },
                "Content": "public static Task WaitForExitAsync(this Process process, int timeoutInMilliseconds)",
                "XmlDocumentation": ""
              },
              "Id": "M:DocAsCode.Utility.ProcessUtility.WaitForExitAsync(System.Diagnostics.Process,System.Int32)",
              "Parent": "T:DocAsCode.Utility.ProcessUtility",
              "XmlDocumentation": ""
            }
          ],
          "Syntax": {
            "Content": "public static class ProcessUtility",
            "XmlDocumentation": ""
          },
          "Id": "T:DocAsCode.Utility.ProcessUtility",
          "Parent": "N:DocAsCode.Utility",
          "XmlDocumentation": ""
        }
      ],
      "Id": "N:DocAsCode.Utility",
      "Parent": "Utility",
      "XmlDocumentation": ""
    }
  ],
  "Id": "Utility",
  "MscorlibVersion": {
    "Major": 4
  }
}