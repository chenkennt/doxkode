{
  "Namespaces": [
    {
      "MemberDict": {
        "Class": {
          "T:DocAsCode.GenDocMetadata.MethodSymbolGenerator": {
            "MemberDict": {
              "Field": {},
              "Property": {},
              "Event": {},
              "Constructor": {},
              "Method": {
                "M:DocAsCode.GenDocMetadata.MethodSymbolGenerator.GenerateFrom(Microsoft.CodeAnalysis.ISymbol)": {
                  "Syntax": {
                    "Content": "public override DocMetadata GenerateFrom(ISymbol symbol)",
                    "XmlDocumentation": ""
                  },
                  "Id": "M:DocAsCode.GenDocMetadata.MethodSymbolGenerator.GenerateFrom(Microsoft.CodeAnalysis.ISymbol)",
                  "XmlDocumentation": ""
                },
                "M:DocAsCode.GenDocMetadata.MethodSymbolGenerator.CanGenerate(Microsoft.CodeAnalysis.ISymbol)": {
                  "Syntax": {
                    "Content": "public override bool CanGenerate(ISymbol symbol)",
                    "XmlDocumentation": ""
                  },
                  "Id": "M:DocAsCode.GenDocMetadata.MethodSymbolGenerator.CanGenerate(Microsoft.CodeAnalysis.ISymbol)",
                  "XmlDocumentation": ""
                }
              }
            },
            "Syntax": {
              "Content": "public class MethodSymbolGenerator",
              "XmlDocumentation": ""
            },
            "Id": "T:DocAsCode.GenDocMetadata.MethodSymbolGenerator",
            "XmlDocumentation": ""
          },
          "T:DocAsCode.GenDocMetadata.NamespaceSymbolGenerator": {
            "MemberDict": {
              "Field": {},
              "Property": {},
              "Event": {},
              "Constructor": {},
              "Method": {
                "M:DocAsCode.GenDocMetadata.NamespaceSymbolGenerator.CanGenerate(Microsoft.CodeAnalysis.ISymbol)": {
                  "Syntax": {
                    "Content": "public override bool CanGenerate(ISymbol symbol)",
                    "XmlDocumentation": ""
                  },
                  "Id": "M:DocAsCode.GenDocMetadata.NamespaceSymbolGenerator.CanGenerate(Microsoft.CodeAnalysis.ISymbol)",
                  "XmlDocumentation": ""
                },
                "M:DocAsCode.GenDocMetadata.NamespaceSymbolGenerator.GenerateFrom(Microsoft.CodeAnalysis.ISymbol)": {
                  "Syntax": {
                    "Content": "public override DocMetadata GenerateFrom(ISymbol symbol)",
                    "XmlDocumentation": ""
                  },
                  "Id": "M:DocAsCode.GenDocMetadata.NamespaceSymbolGenerator.GenerateFrom(Microsoft.CodeAnalysis.ISymbol)",
                  "XmlDocumentation": ""
                }
              }
            },
            "Syntax": {
              "Content": "public class NamespaceSymbolGenerator",
              "XmlDocumentation": ""
            },
            "Id": "T:DocAsCode.GenDocMetadata.NamespaceSymbolGenerator",
            "XmlDocumentation": ""
          },
          "T:DocAsCode.GenDocMetadata.DocMetadataConverterFactory": {
            "MemberDict": {
              "Field": {
                "F:DocAsCode.GenDocMetadata.DocMetadataConverterFactory._supportedConverters": {
                  "Syntax": {
                    "Content": "_supportedConverters",
                    "XmlDocumentation": "<member name=\"F:DocAsCode.GenDocMetadata.DocMetadataConverterFactory._supportedConverters\">\r\n    <summary>\r\n    Order matters\r\n    </summary>\r\n</member>\r\n"
                  },
                  "Id": "F:DocAsCode.GenDocMetadata.DocMetadataConverterFactory._supportedConverters",
                  "XmlDocumentation": "<member name=\"F:DocAsCode.GenDocMetadata.DocMetadataConverterFactory._supportedConverters\">\r\n    <summary>\r\n    Order matters\r\n    </summary>\r\n</member>\r\n"
                }
              },
              "Property": {},
              "Event": {},
              "Constructor": {},
              "Method": {
                "M:DocAsCode.GenDocMetadata.DocMetadataConverterFactory.Convert(Microsoft.CodeAnalysis.ISymbol)": {
                  "Syntax": {
                    "Content": "public static DocMetadata Convert(ISymbol symbol)",
                    "XmlDocumentation": ""
                  },
                  "Id": "M:DocAsCode.GenDocMetadata.DocMetadataConverterFactory.Convert(Microsoft.CodeAnalysis.ISymbol)",
                  "XmlDocumentation": ""
                }
              }
            },
            "Syntax": {
              "Content": "public static class DocMetadataConverterFactory",
              "XmlDocumentation": ""
            },
            "Id": "T:DocAsCode.GenDocMetadata.DocMetadataConverterFactory",
            "XmlDocumentation": ""
          },
          "T:DocAsCode.GenDocMetadata.NameTypeSymbolGenerator": {
            "MemberDict": {
              "Field": {},
              "Property": {},
              "Event": {},
              "Constructor": {},
              "Method": {
                "M:DocAsCode.GenDocMetadata.NameTypeSymbolGenerator.GenerateFrom(Microsoft.CodeAnalysis.ISymbol)": {
                  "Syntax": {
                    "Content": "public override DocMetadata GenerateFrom(ISymbol symbol)",
                    "XmlDocumentation": ""
                  },
                  "Id": "M:DocAsCode.GenDocMetadata.NameTypeSymbolGenerator.GenerateFrom(Microsoft.CodeAnalysis.ISymbol)",
                  "XmlDocumentation": ""
                },
                "M:DocAsCode.GenDocMetadata.NameTypeSymbolGenerator.CanGenerate(Microsoft.CodeAnalysis.ISymbol)": {
                  "Syntax": {
                    "Content": "public override bool CanGenerate(ISymbol symbol)",
                    "XmlDocumentation": ""
                  },
                  "Id": "M:DocAsCode.GenDocMetadata.NameTypeSymbolGenerator.CanGenerate(Microsoft.CodeAnalysis.ISymbol)",
                  "XmlDocumentation": ""
                }
              }
            },
            "Syntax": {
              "Content": "public class NameTypeSymbolGenerator",
              "XmlDocumentation": ""
            },
            "Id": "T:DocAsCode.GenDocMetadata.NameTypeSymbolGenerator",
            "XmlDocumentation": ""
          },
          "T:DocAsCode.GenDocMetadata.DefaultGenerator": {
            "MemberDict": {
              "Field": {},
              "Property": {},
              "Event": {},
              "Constructor": {},
              "Method": {
                "M:DocAsCode.GenDocMetadata.DefaultGenerator.GenerateFrom(Microsoft.CodeAnalysis.ISymbol)": {
                  "Syntax": {
                    "Content": "public virtual DocMetadata GenerateFrom(ISymbol symbol)",
                    "XmlDocumentation": ""
                  },
                  "Id": "M:DocAsCode.GenDocMetadata.DefaultGenerator.GenerateFrom(Microsoft.CodeAnalysis.ISymbol)",
                  "XmlDocumentation": ""
                },
                "M:DocAsCode.GenDocMetadata.DefaultGenerator.CanGenerate(Microsoft.CodeAnalysis.ISymbol)": {
                  "Syntax": {
                    "Content": "public virtual bool CanGenerate(ISymbol symbol)",
                    "XmlDocumentation": ""
                  },
                  "Id": "M:DocAsCode.GenDocMetadata.DefaultGenerator.CanGenerate(Microsoft.CodeAnalysis.ISymbol)",
                  "XmlDocumentation": ""
                },
                "M:DocAsCode.GenDocMetadata.DefaultGenerator.GetSyntaxNode(Microsoft.CodeAnalysis.ISymbol)": {
                  "Syntax": {
                    "Content": "protected SyntaxNode GetSyntaxNode(ISymbol symbol)",
                    "XmlDocumentation": ""
                  },
                  "Id": "M:DocAsCode.GenDocMetadata.DefaultGenerator.GetSyntaxNode(Microsoft.CodeAnalysis.ISymbol)",
                  "XmlDocumentation": ""
                }
              }
            },
            "Syntax": {
              "Content": "public class DefaultGenerator",
              "XmlDocumentation": ""
            },
            "Id": "T:DocAsCode.GenDocMetadata.DefaultGenerator",
            "XmlDocumentation": ""
          },
          "T:DocAsCode.GenDocMetadata.Program": {
            "MemberDict": {
              "Field": {
                "F:DocAsCode.GenDocMetadata.Program._delimitedArrayConverter": {
                  "Syntax": {
                    "Content": "_delimitedArrayConverter",
                    "XmlDocumentation": ""
                  },
                  "Id": "F:DocAsCode.GenDocMetadata.Program._delimitedArrayConverter",
                  "XmlDocumentation": ""
                }
              },
              "Property": {},
              "Event": {},
              "Constructor": {},
              "Method": {
                "M:DocAsCode.GenDocMetadata.Program.ExportMetadataFile(DocAsCode.EntityModel.AssemblyDocMetadata,System.String)": {
                  "Syntax": {
                    "Content": "private static void ExportMetadataFile(AssemblyDocMetadata assemblyDocMetadata, string baseDirectory)",
                    "XmlDocumentation": ""
                  },
                  "Id": "M:DocAsCode.GenDocMetadata.Program.ExportMetadataFile(DocAsCode.EntityModel.AssemblyDocMetadata,System.String)",
                  "XmlDocumentation": ""
                },
                "M:DocAsCode.GenDocMetadata.Program.ExportMarkdownToc(DocAsCode.EntityModel.AssemblyDocMetadata,System.String)": {
                  "Syntax": {
                    "Content": "private static void ExportMarkdownToc(AssemblyDocMetadata assemblyDocMetadata, string baseDirectory)",
                    "XmlDocumentation": "<member name=\"M:DocAsCode.GenDocMetadata.Program.ExportMarkdownToc(DocAsCode.EntityModel.AssemblyDocMetadata,System.String)\">\r\n    <summary>\r\n    |--AssemblyName\r\n            |--NamespaceId1\r\n                    |--NamespaceId1.md\r\n                    |--ClassId1.md\r\n                    |--ClassId2.md\r\n            |--NamepsaceId2\r\n                    |--NamespaceId2.md\r\n                    |--ClassId3.md\r\n    </summary>\r\n    <param name=\"directory\"></param>\r\n</member>\r\n"
                  },
                  "Id": "M:DocAsCode.GenDocMetadata.Program.ExportMarkdownToc(DocAsCode.EntityModel.AssemblyDocMetadata,System.String)",
                  "XmlDocumentation": "<member name=\"M:DocAsCode.GenDocMetadata.Program.ExportMarkdownToc(DocAsCode.EntityModel.AssemblyDocMetadata,System.String)\">\r\n    <summary>\r\n    |--AssemblyName\r\n            |--NamespaceId1\r\n                    |--NamespaceId1.md\r\n                    |--ClassId1.md\r\n                    |--ClassId2.md\r\n            |--NamepsaceId2\r\n                    |--NamespaceId2.md\r\n                    |--ClassId3.md\r\n    </summary>\r\n    <param name=\"directory\"></param>\r\n</member>\r\n"
                },
                "M:DocAsCode.GenDocMetadata.Program.Main(System.String[])": {
                  "Syntax": {
                    "Content": "static void Main(string[] args)",
                    "XmlDocumentation": ""
                  },
                  "Id": "M:DocAsCode.GenDocMetadata.Program.Main(System.String[])",
                  "XmlDocumentation": ""
                },
                "M:DocAsCode.GenDocMetadata.Program.GenerateAssemblyDocMetadata(Microsoft.CodeAnalysis.Project)": {
                  "Syntax": {
                    "Content": "private static AssemblyDocMetadata GenerateAssemblyDocMetadata(Project project)",
                    "XmlDocumentation": ""
                  },
                  "Id": "M:DocAsCode.GenDocMetadata.Program.GenerateAssemblyDocMetadata(Microsoft.CodeAnalysis.Project)",
                  "XmlDocumentation": ""
                },
                "M:DocAsCode.GenDocMetadata.Program.PrintUsage": {
                  "Syntax": {
                    "Content": "static void PrintUsage()",
                    "XmlDocumentation": ""
                  },
                  "Id": "M:DocAsCode.GenDocMetadata.Program.PrintUsage",
                  "XmlDocumentation": ""
                }
              }
            },
            "Syntax": {
              "Content": "public class Program",
              "XmlDocumentation": ""
            },
            "Id": "T:DocAsCode.GenDocMetadata.Program",
            "XmlDocumentation": ""
          }
        },
        "Interface": {
          "T:DocAsCode.GenDocMetadata.IMetadataGenerator": {
            "MemberDict": {
              "Property": {},
              "Event": {},
              "Method": {
                "M:DocAsCode.GenDocMetadata.IMetadataGenerator.CanGenerate(Microsoft.CodeAnalysis.ISymbol)": {
                  "Syntax": {
                    "Content": "bool CanGenerate(ISymbol symbol);",
                    "XmlDocumentation": ""
                  },
                  "Id": "M:DocAsCode.GenDocMetadata.IMetadataGenerator.CanGenerate(Microsoft.CodeAnalysis.ISymbol)",
                  "XmlDocumentation": ""
                },
                "M:DocAsCode.GenDocMetadata.IMetadataGenerator.GenerateFrom(Microsoft.CodeAnalysis.ISymbol)": {
                  "Syntax": {
                    "Content": "DocMetadata GenerateFrom(ISymbol symbol);",
                    "XmlDocumentation": ""
                  },
                  "Id": "M:DocAsCode.GenDocMetadata.IMetadataGenerator.GenerateFrom(Microsoft.CodeAnalysis.ISymbol)",
                  "XmlDocumentation": ""
                }
              }
            },
            "Syntax": {
              "Content": "interface IMetadataGenerator",
              "XmlDocumentation": ""
            },
            "Id": "T:DocAsCode.GenDocMetadata.IMetadataGenerator",
            "XmlDocumentation": ""
          }
        },
        "Struct": {},
        "Delegate": {},
        "Enum": {
          "T:DocAsCode.GenDocMetadata.OutputType": {
            "Syntax": {
              "Content": "enum OutputType",
              "XmlDocumentation": ""
            },
            "Id": "T:DocAsCode.GenDocMetadata.OutputType",
            "XmlDocumentation": ""
          }
        }
      },
      "Id": "N:DocAsCode.GenDocMetadata",
      "XmlDocumentation": ""
    }
  ],
  "Id": "GenDocMetadata",
  "MscorlibVersion": {
    "Major": 4
  }
}