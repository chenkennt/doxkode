<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<PropertyGroup Condition=" '$(_NTTREE)' == '' and '$(SourceControl)' == 'TeamFoundation' ">
		<SccProjectName>SAK</SccProjectName>
		<SccLocalPath>SAK</SccLocalPath>
		<SccAuxPath>SAK</SccAuxPath>
		<SccProvider>SAK</SccProvider>
	</PropertyGroup>

	<!-- ********************* XAML PROPERTY PAGE COMPILATION START **************************** -->
    <!-- We will have this point into our own Tools directory for now, until
         CPS ships as the official target project system for development by
         our customers - at which time we can include it in the VSSDK -->
    <UsingTask TaskName="XamlRuleToCode" AssemblyFile="Tools\Xaml2Cs.exe"/>

	<PropertyGroup>
		<PrepareResourceNamesDependsOn>
			GenerateRuleSourceFromXaml;
			$(PrepareResourceNamesDependsOn)
		</PrepareResourceNamesDependsOn>
		<CleanDependsOn>GenerateRulePrep;$(CleanDependsOn)</CleanDependsOn>
	</PropertyGroup>

	<Target Name="BeforeCompile" DependsOnTargets="GenerateRuleSourceFromXaml"/>

	<ItemDefinitionGroup>
		<XamlPropertyRule>
			<DataAccess>None</DataAccess>
			<Namespace>$(RootNamespace)</Namespace>
			<Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
			<CreateFallbackRule>true</CreateFallbackRule>
			<OutputPath>$(IntermediateOutputPath)</OutputPath>
		</XamlPropertyRule>
		<XamlPropertyRule Condition=" '$(RuleInjection)' == 'true' ">
			<DataAccess>IRule</DataAccess>
			<RuleInjection>ProjectLevel</RuleInjection>
			<RuleInjectionCatalog>Project</RuleInjectionCatalog>
			<RuleInjectionClassName>ProjectProperties</RuleInjectionClassName>
		</XamlPropertyRule>
	</ItemDefinitionGroup>

	<Target Name="GenerateRulePrep">
    <ItemGroup>
      <XamlPropertyRule Condition="'$(IncludeAllXamlRules)' == 'true' and '%(TasksXmlSchemaOutputs.PrimaryRuleFile)' == 'true'" Include="@(TasksXmlSchemaOutputs)">
        <DataAccess>IRule</DataAccess>
      </XamlPropertyRule>
      <_XamlPropertyRuleSource Include="@(XamlPropertyRule->'$(IntermediateOutputPath)%(FileName)$(DefaultLanguageSourceExtension)')"/>
      <Compile Include="@(_XamlPropertyRuleSource)">
        <ExcludeFromStyleCop>true</ExcludeFromStyleCop>
      </Compile>
      <Clean Include="@(_XamlPropertyRuleSource)" />
    </ItemGroup>
  </Target>

	<!-- The target needs to run so the task can populate the output items correctly. The task does an uptodate check on the files themselves-->
	<Target Name="GenerateRuleSourceFromXaml"
          DependsOnTargets="GenerateRulePrep"
          Condition="'@(XamlPropertyRule)' != ''">
    <XamlRuleToCode
       CreateFallbackRule="%(XamlPropertyRule.CreateFallbackRule)"
       NamespaceName="%(XamlPropertyRule.Namespace)"
       RuleMissingError="%(XamlPropertyRule.RuleMissingError)"
       PropertyMissingError="%(XamlPropertyRule.PropertyMissingError)"
       Inputs="@(XamlPropertyRule)"
       OutputDirectory="%(XamlPropertyRule.OutputPath)"
       DataAccess="%(XamlPropertyRule.DataAccess)"
       RuleBaseTypes="%(XamlPropertyRule.RuleBaseTypes)"
       RuleNamePrefix="%(XamlPropertyRule.RuleNamePrefix)"
       RuleInjectionClassName="%(XamlPropertyRule.RuleInjectionClassName)"
       RuleInjection="%(XamlPropertyRule.RuleInjection)"
       RuleInjectionContextName="%(XamlPropertyRule.RuleInjectionCatalog)"
       ProjectPropertiesContext="%(XamlPropertyRule.ProjectPropertiesContext)"
       IPropertyPagesCatalogTypeName="%(XamlPropertyRule.IPropertyPagesCatalogTypeName)"
       IRuleTypeName="%(XamlPropertyRule.IRuleTypeName)"
       ConfiguredProjectTypeName="%(XamlPropertyRule.ConfiguredProjectTypeName)"
       IEvaluatedPropertyTypeName="%(XamlPropertyRule.IEvaluatedPropertyTypeName)"
       IProjectPropertiesContextTypeName="%(XamlPropertyRule.IProjectPropertiesContextTypeName)">
      <Output TaskParameter="ResourcesToEmbed" ItemName="EmbeddedResource"/>
    </XamlRuleToCode>
  </Target>

	<!-- ********************* XAML PROPERTY PAGE COMPILATION END  **************************** -->

</Project>
